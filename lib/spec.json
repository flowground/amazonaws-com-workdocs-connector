{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://workdocs.amazonaws.com/"
        },
        {
            "url": "http://workdocs.amazonaws.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "<p>The WorkDocs API is designed for the following use cases:</p> <ul> <li> <p>File Migration: File migration applications are supported for users who want to migrate their files from an on-premises or off-premises file system or service. Users can insert files into a user directory structure, as well as allow for basic metadata changes, such as modifications to the permissions of files.</p> </li> <li> <p>Security: Support security applications are supported for users who have additional security needs, such as antivirus or data loss prevention. The API actions, along with AWS CloudTrail, allow these applications to detect when changes occur in Amazon WorkDocs. Then, the application can take the necessary actions and replace the target file. If the target file violates the policy, the application can also choose to email the user.</p> </li> <li> <p>eDiscovery/Analytics: General administrative applications are supported, such as eDiscovery and analytics. These applications can choose to mimic or record the actions in an Amazon WorkDocs site, along with AWS CloudTrail, to replicate data for eDiscovery, backup, or analytical applications.</p> </li> </ul> <p>All Amazon WorkDocs API actions are Amazon authenticated and certificate-signed. They not only require the use of the AWS SDK, but also allow for the exclusive use of IAM users and roles to help facilitate access, trust, and permission policies. By creating a role and allowing an IAM user to access the Amazon WorkDocs site, the IAM user gains full administrative visibility into the entire Amazon WorkDocs site (or as set in the IAM policy). This includes, but is not limited to, the ability to modify file permissions and upload any file to any user. This allows developers to perform the three use cases above, as well as give users the ability to grant access on a selective basis using the IAM model.</p>",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "Amazon WorkDocs",
        "version": "2016-05-01",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workdocs-2016-05-01.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "workdocs"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://docs.aws.amazon.com/workdocs/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/api/v1/activities": {
            "get": {
                "description": "Describes the user activities in a specified time period.",
                "operationId": "DescribeActivities",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Marker": {
                                            "description": "The marker for the next set of results.",
                                            "maxLength": 2048,
                                            "minLength": 1,
                                            "pattern": "[\\u0000-\\u00FF]+",
                                            "type": "string"
                                        },
                                        "UserActivities": {
                                            "description": "The list of activities for the specified user and time period.",
                                            "items": {
                                                "description": "Describes the activity information.",
                                                "properties": {
                                                    "CommentMetadata": {
                                                        "description": "Metadata of the commenting activity. This is an optional field and is filled for commenting activities.",
                                                        "properties": {
                                                            "CommentId": {
                                                                "description": "The ID of the comment.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "[\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "CommentStatus": {
                                                                "description": "The status of the comment.",
                                                                "enum": [
                                                                    "DRAFT",
                                                                    "PUBLISHED",
                                                                    "DELETED"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Contributor": {
                                                                "description": "The user who made the comment.",
                                                                "properties": {
                                                                    "CreatedTimestamp": {
                                                                        "description": "The time when the user was created.",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "EmailAddress": {
                                                                        "description": "The email address of the user.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                                        "type": "string"
                                                                    },
                                                                    "GivenName": {
                                                                        "description": "The given name of the user.",
                                                                        "maxLength": 64,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "Id": {
                                                                        "description": "The ID of the user.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "pattern": "[&\\w+-.@]+",
                                                                        "type": "string"
                                                                    },
                                                                    "Locale": {
                                                                        "description": "The locale of the user.",
                                                                        "enum": [
                                                                            "en",
                                                                            "fr",
                                                                            "ko",
                                                                            "de",
                                                                            "es",
                                                                            "ja",
                                                                            "ru",
                                                                            "zh_CN",
                                                                            "zh_TW",
                                                                            "pt_BR",
                                                                            "default"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "ModifiedTimestamp": {
                                                                        "description": "The time when the user was modified.",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "OrganizationId": {
                                                                        "description": "The ID of the organization.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "pattern": "[&\\w+-.@]+",
                                                                        "type": "string"
                                                                    },
                                                                    "RecycleBinFolderId": {
                                                                        "description": "The ID of the recycle bin folder.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "pattern": "[\\w+-.@]+",
                                                                        "type": "string"
                                                                    },
                                                                    "RootFolderId": {
                                                                        "description": "The ID of the root folder.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "pattern": "[\\w+-.@]+",
                                                                        "type": "string"
                                                                    },
                                                                    "Status": {
                                                                        "description": "The status of the user.",
                                                                        "enum": [
                                                                            "ACTIVE",
                                                                            "INACTIVE",
                                                                            "PENDING"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "Storage": {
                                                                        "description": "The storage for the user.",
                                                                        "properties": {
                                                                            "StorageRule": {
                                                                                "description": "The storage for a user.",
                                                                                "properties": {
                                                                                    "StorageAllocatedInBytes": {
                                                                                        "description": "The amount of storage allocated, in bytes.",
                                                                                        "minimum": 0,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "StorageType": {
                                                                                        "description": "The type of storage.",
                                                                                        "enum": [
                                                                                            "UNLIMITED",
                                                                                            "QUOTA"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "StorageUtilizedInBytes": {
                                                                                "description": "The amount of storage used, in bytes.",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "Surname": {
                                                                        "description": "The surname of the user.",
                                                                        "maxLength": 64,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "TimeZoneId": {
                                                                        "description": "The time zone ID of the user.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "Type": {
                                                                        "description": "The type of user.",
                                                                        "enum": [
                                                                            "USER",
                                                                            "ADMIN",
                                                                            "POWERUSER",
                                                                            "MINIMALUSER",
                                                                            "WORKSPACESUSER"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "Username": {
                                                                        "description": "The login name of the user.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "CreatedTimestamp": {
                                                                "description": "The timestamp that the comment was created.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "RecipientId": {
                                                                "description": "The ID of the user being replied to.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "[&\\w+-.@]+",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Initiator": {
                                                        "description": "The user who performed the action.",
                                                        "properties": {
                                                            "EmailAddress": {
                                                                "description": "The email address of the user.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                                "type": "string"
                                                            },
                                                            "GivenName": {
                                                                "description": "The given name of the user before a rename operation.",
                                                                "maxLength": 64,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "Id": {
                                                                "description": "The ID of the user.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "[&\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "Surname": {
                                                                "description": "The surname of the user.",
                                                                "maxLength": 64,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "Username": {
                                                                "description": "The name of the user.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "IsIndirectActivity": {
                                                        "description": "Indicates whether an activity is indirect or direct. An indirect activity results from a direct activity performed on a parent resource. For example, sharing a parent folder (the direct activity) shares all of the subfolders and documents within the parent folder (the indirect activity).",
                                                        "type": "boolean"
                                                    },
                                                    "OrganizationId": {
                                                        "description": "The ID of the organization.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "OriginalParent": {
                                                        "description": "The original parent of the resource. This is an optional field and is filled for move activities.",
                                                        "properties": {
                                                            "Id": {
                                                                "description": "The ID of the resource.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "[\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the resource.",
                                                                "maxLength": 255,
                                                                "minLength": 1,
                                                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                                "type": "string"
                                                            },
                                                            "OriginalName": {
                                                                "description": "The original name of the resource before a rename operation.",
                                                                "maxLength": 255,
                                                                "minLength": 1,
                                                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                                "type": "string"
                                                            },
                                                            "Owner": {
                                                                "description": "The owner of the resource.",
                                                                "properties": {
                                                                    "EmailAddress": {
                                                                        "description": "The email address of the user.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                                        "type": "string"
                                                                    },
                                                                    "GivenName": {
                                                                        "description": "The given name of the user before a rename operation.",
                                                                        "maxLength": 64,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "Id": {
                                                                        "description": "The ID of the user.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "pattern": "[&\\w+-.@]+",
                                                                        "type": "string"
                                                                    },
                                                                    "Surname": {
                                                                        "description": "The surname of the user.",
                                                                        "maxLength": 64,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "Username": {
                                                                        "description": "The name of the user.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "ParentId": {
                                                                "description": "The parent ID of the resource before a rename operation.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "[\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "Type": {
                                                                "description": "The type of resource.",
                                                                "enum": [
                                                                    "FOLDER",
                                                                    "DOCUMENT"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "VersionId": {
                                                                "description": "The version ID of the resource. This is an optional field and is filled for action on document version.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "[\\w+-.@]+",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Participants": {
                                                        "description": "The list of users or groups impacted by this action. This is an optional field and is filled for the following sharing activities: DOCUMENT_SHARED, DOCUMENT_SHARED, DOCUMENT_UNSHARED, FOLDER_SHARED, FOLDER_UNSHARED.",
                                                        "properties": {
                                                            "Groups": {
                                                                "description": "The list of user groups.",
                                                                "items": {
                                                                    "description": "Describes the metadata of a user group.",
                                                                    "properties": {
                                                                        "Id": {
                                                                            "description": "The ID of the user group.",
                                                                            "maxLength": 256,
                                                                            "minLength": 1,
                                                                            "pattern": "[&\\w+-.@]+",
                                                                            "type": "string"
                                                                        },
                                                                        "Name": {
                                                                            "description": "The name of the group.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "Users": {
                                                                "description": "The list of users.",
                                                                "items": {
                                                                    "description": "Describes the metadata of the user.",
                                                                    "properties": {
                                                                        "EmailAddress": {
                                                                            "description": "The email address of the user.",
                                                                            "maxLength": 256,
                                                                            "minLength": 1,
                                                                            "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                                            "type": "string"
                                                                        },
                                                                        "GivenName": {
                                                                            "description": "The given name of the user before a rename operation.",
                                                                            "maxLength": 64,
                                                                            "minLength": 1,
                                                                            "type": "string"
                                                                        },
                                                                        "Id": {
                                                                            "description": "The ID of the user.",
                                                                            "maxLength": 256,
                                                                            "minLength": 1,
                                                                            "pattern": "[&\\w+-.@]+",
                                                                            "type": "string"
                                                                        },
                                                                        "Surname": {
                                                                            "description": "The surname of the user.",
                                                                            "maxLength": 64,
                                                                            "minLength": 1,
                                                                            "type": "string"
                                                                        },
                                                                        "Username": {
                                                                            "description": "The name of the user.",
                                                                            "maxLength": 256,
                                                                            "minLength": 1,
                                                                            "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ResourceMetadata": {
                                                        "description": "The metadata of the resource involved in the user action.",
                                                        "properties": {
                                                            "Id": {
                                                                "description": "The ID of the resource.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "[\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the resource.",
                                                                "maxLength": 255,
                                                                "minLength": 1,
                                                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                                "type": "string"
                                                            },
                                                            "OriginalName": {
                                                                "description": "The original name of the resource before a rename operation.",
                                                                "maxLength": 255,
                                                                "minLength": 1,
                                                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                                "type": "string"
                                                            },
                                                            "Owner": {
                                                                "description": "The owner of the resource.",
                                                                "properties": {
                                                                    "EmailAddress": {
                                                                        "description": "The email address of the user.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                                        "type": "string"
                                                                    },
                                                                    "GivenName": {
                                                                        "description": "The given name of the user before a rename operation.",
                                                                        "maxLength": 64,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "Id": {
                                                                        "description": "The ID of the user.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "pattern": "[&\\w+-.@]+",
                                                                        "type": "string"
                                                                    },
                                                                    "Surname": {
                                                                        "description": "The surname of the user.",
                                                                        "maxLength": 64,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "Username": {
                                                                        "description": "The name of the user.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "ParentId": {
                                                                "description": "The parent ID of the resource before a rename operation.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "[\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "Type": {
                                                                "description": "The type of resource.",
                                                                "enum": [
                                                                    "FOLDER",
                                                                    "DOCUMENT"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "VersionId": {
                                                                "description": "The version ID of the resource. This is an optional field and is filled for action on document version.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "[\\w+-.@]+",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "TimeStamp": {
                                                        "description": "The timestamp when the action was performed.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The activity type.",
                                                        "enum": [
                                                            "DOCUMENT_CHECKED_IN",
                                                            "DOCUMENT_CHECKED_OUT",
                                                            "DOCUMENT_RENAMED",
                                                            "DOCUMENT_VERSION_UPLOADED",
                                                            "DOCUMENT_VERSION_DELETED",
                                                            "DOCUMENT_VERSION_VIEWED",
                                                            "DOCUMENT_VERSION_DOWNLOADED",
                                                            "DOCUMENT_RECYCLED",
                                                            "DOCUMENT_RESTORED",
                                                            "DOCUMENT_REVERTED",
                                                            "DOCUMENT_SHARED",
                                                            "DOCUMENT_UNSHARED",
                                                            "DOCUMENT_SHARE_PERMISSION_CHANGED",
                                                            "DOCUMENT_SHAREABLE_LINK_CREATED",
                                                            "DOCUMENT_SHAREABLE_LINK_REMOVED",
                                                            "DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED",
                                                            "DOCUMENT_MOVED",
                                                            "DOCUMENT_COMMENT_ADDED",
                                                            "DOCUMENT_COMMENT_DELETED",
                                                            "DOCUMENT_ANNOTATION_ADDED",
                                                            "DOCUMENT_ANNOTATION_DELETED",
                                                            "FOLDER_CREATED",
                                                            "FOLDER_DELETED",
                                                            "FOLDER_RENAMED",
                                                            "FOLDER_RECYCLED",
                                                            "FOLDER_RESTORED",
                                                            "FOLDER_SHARED",
                                                            "FOLDER_UNSHARED",
                                                            "FOLDER_SHARE_PERMISSION_CHANGED",
                                                            "FOLDER_SHAREABLE_LINK_CREATED",
                                                            "FOLDER_SHAREABLE_LINK_REMOVED",
                                                            "FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED",
                                                            "FOLDER_MOVED"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/documents": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates a new document object and version object.</p> <p>The client specifies the parent folder ID and name of the document to upload. The ID is optionally specified when creating a new version of an existing document. This is the first step to upload a document. Next, upload the document to the URL returned from the call, and then call <a>UpdateDocumentVersion</a>.</p> <p>To cancel the document upload, call <a>AbortDocumentVersionUpload</a>.</p>",
                "operationId": "InitiateDocumentVersionUpload",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Metadata": {
                                            "description": "The document metadata.",
                                            "properties": {
                                                "CreatedTimestamp": {
                                                    "description": "The time when the document was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "CreatorId": {
                                                    "description": "The ID of the creator.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Id": {
                                                    "description": "The ID of the document.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Labels": {
                                                    "description": "List of labels on the document.",
                                                    "items": {
                                                        "maxLength": 32,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                        "type": "string"
                                                    },
                                                    "maxItems": 20,
                                                    "type": "array"
                                                },
                                                "LatestVersionMetadata": {
                                                    "description": "The latest version of the document.",
                                                    "properties": {
                                                        "ContentCreatedTimestamp": {
                                                            "description": "The timestamp when the content of the document was originally created.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "ContentModifiedTimestamp": {
                                                            "description": "The timestamp when the content of the document was modified.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "ContentType": {
                                                            "description": "The content type of the document.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "CreatedTimestamp": {
                                                            "description": "The timestamp when the document was first uploaded.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "CreatorId": {
                                                            "description": "The ID of the creator.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "pattern": "[&\\w+-.@]+",
                                                            "type": "string"
                                                        },
                                                        "Id": {
                                                            "description": "The ID of the version.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "pattern": "[\\w+-.@]+",
                                                            "type": "string"
                                                        },
                                                        "ModifiedTimestamp": {
                                                            "description": "The timestamp when the document was last uploaded.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "Name": {
                                                            "description": "The name of the version.",
                                                            "maxLength": 255,
                                                            "minLength": 1,
                                                            "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                            "type": "string"
                                                        },
                                                        "Signature": {
                                                            "description": "The signature of the document.",
                                                            "maxLength": 128,
                                                            "minLength": 0,
                                                            "pattern": "[&\\w+-.@]+",
                                                            "type": "string"
                                                        },
                                                        "Size": {
                                                            "description": "The size of the document, in bytes.",
                                                            "type": "integer"
                                                        },
                                                        "Source": {
                                                            "description": "The source of the document.",
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "enum": [
                                                                            "ORIGINAL",
                                                                            "WITH_COMMENTS"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "format": "password",
                                                                        "maxLength": 1024,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the document.",
                                                            "enum": [
                                                                "INITIALIZED",
                                                                "ACTIVE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "Thumbnail": {
                                                            "description": "The thumbnail of the document.",
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "enum": [
                                                                            "SMALL",
                                                                            "SMALL_HQ",
                                                                            "LARGE"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "format": "password",
                                                                        "maxLength": 1024,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "ModifiedTimestamp": {
                                                    "description": "The time when the document was updated.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ParentFolderId": {
                                                    "description": "The ID of the parent folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "ResourceState": {
                                                    "description": "The resource state.",
                                                    "enum": [
                                                        "ACTIVE",
                                                        "RESTORING",
                                                        "RECYCLING",
                                                        "RECYCLED"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "UploadMetadata": {
                                            "description": "The upload metadata.",
                                            "properties": {
                                                "SignedHeaders": {
                                                    "description": "The signed headers.",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "[\\w-]+",
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "maxLength": 1024,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "UploadUrl": {
                                                    "description": "The URL of the upload.",
                                                    "format": "password",
                                                    "maxLength": 1024,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "EntityAlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "StorageLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "StorageLimitWillExceedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "489": {
                        "description": "DraftUploadOutOfSyncException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "490": {
                        "description": "ResourceAlreadyCheckedOutException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ContentCreatedTimestamp": {
                                        "description": "The timestamp when the content of the document was originally created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ContentModifiedTimestamp": {
                                        "description": "The timestamp when the content of the document was modified.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ContentType": {
                                        "description": "The content type of the document.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "DocumentSizeInBytes": {
                                        "description": "The size of the document, in bytes.",
                                        "type": "integer"
                                    },
                                    "Id": {
                                        "description": "The ID of the document.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the document.",
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                        "type": "string"
                                    },
                                    "ParentFolderId": {
                                        "description": "The ID of the parent folder.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[\\w+-.@]+",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ParentFolderId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/v1/documents/{DocumentId}": {
            "delete": {
                "description": "Permanently deletes the specified document and its associated metadata.",
                "operationId": "DeleteDocument",
                "parameters": [
                    {
                        "in": "path",
                        "name": "DocumentId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ConflictingOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Retrieves details of a document.",
                "operationId": "GetDocument",
                "parameters": [
                    {
                        "in": "path",
                        "name": "DocumentId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CustomMetadata": {
                                            "description": "The custom metadata on the document.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 56,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 8,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "description": "The metadata details of the document.",
                                            "properties": {
                                                "CreatedTimestamp": {
                                                    "description": "The time when the document was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "CreatorId": {
                                                    "description": "The ID of the creator.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Id": {
                                                    "description": "The ID of the document.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Labels": {
                                                    "description": "List of labels on the document.",
                                                    "items": {
                                                        "maxLength": 32,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                        "type": "string"
                                                    },
                                                    "maxItems": 20,
                                                    "type": "array"
                                                },
                                                "LatestVersionMetadata": {
                                                    "description": "The latest version of the document.",
                                                    "properties": {
                                                        "ContentCreatedTimestamp": {
                                                            "description": "The timestamp when the content of the document was originally created.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "ContentModifiedTimestamp": {
                                                            "description": "The timestamp when the content of the document was modified.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "ContentType": {
                                                            "description": "The content type of the document.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "CreatedTimestamp": {
                                                            "description": "The timestamp when the document was first uploaded.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "CreatorId": {
                                                            "description": "The ID of the creator.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "pattern": "[&\\w+-.@]+",
                                                            "type": "string"
                                                        },
                                                        "Id": {
                                                            "description": "The ID of the version.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "pattern": "[\\w+-.@]+",
                                                            "type": "string"
                                                        },
                                                        "ModifiedTimestamp": {
                                                            "description": "The timestamp when the document was last uploaded.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "Name": {
                                                            "description": "The name of the version.",
                                                            "maxLength": 255,
                                                            "minLength": 1,
                                                            "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                            "type": "string"
                                                        },
                                                        "Signature": {
                                                            "description": "The signature of the document.",
                                                            "maxLength": 128,
                                                            "minLength": 0,
                                                            "pattern": "[&\\w+-.@]+",
                                                            "type": "string"
                                                        },
                                                        "Size": {
                                                            "description": "The size of the document, in bytes.",
                                                            "type": "integer"
                                                        },
                                                        "Source": {
                                                            "description": "The source of the document.",
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "enum": [
                                                                            "ORIGINAL",
                                                                            "WITH_COMMENTS"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "format": "password",
                                                                        "maxLength": 1024,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the document.",
                                                            "enum": [
                                                                "INITIALIZED",
                                                                "ACTIVE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "Thumbnail": {
                                                            "description": "The thumbnail of the document.",
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "enum": [
                                                                            "SMALL",
                                                                            "SMALL_HQ",
                                                                            "LARGE"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "format": "password",
                                                                        "maxLength": 1024,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "ModifiedTimestamp": {
                                                    "description": "The time when the document was updated.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ParentFolderId": {
                                                    "description": "The ID of the parent folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "ResourceState": {
                                                    "description": "The resource state.",
                                                    "enum": [
                                                        "ACTIVE",
                                                        "RESTORING",
                                                        "RECYCLING",
                                                        "RECYCLED"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "InvalidPasswordException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "patch": {
                "description": "Updates the specified attributes of a document. The user must have access to both the document and its parent folder, if applicable.",
                "operationId": "UpdateDocument",
                "parameters": [
                    {
                        "in": "path",
                        "name": "DocumentId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "EntityAlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ConflictingOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "489": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Name": {
                                        "description": "The name of the document.",
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                        "type": "string"
                                    },
                                    "ParentFolderId": {
                                        "description": "The ID of the parent folder.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "ResourceState": {
                                        "description": "The resource state of the document. Only ACTIVE and RECYCLED are supported.",
                                        "enum": [
                                            "ACTIVE",
                                            "RESTORING",
                                            "RECYCLING",
                                            "RECYCLED"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/v1/documents/{DocumentId}/path": {
            "get": {
                "description": "<p>Retrieves the path information (the hierarchy from the root folder) for the requested document.</p> <p>By default, Amazon WorkDocs returns a maximum of 100 levels upwards from the requested document and only includes the IDs of the parent folders in the path. You can limit the maximum number of levels. You can also request the names of the parent folders.</p>",
                "operationId": "GetDocumentPath",
                "parameters": [
                    {
                        "in": "path",
                        "name": "DocumentId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Path": {
                                            "description": "The path information.",
                                            "properties": {
                                                "Components": {
                                                    "description": "The components of the resource path.",
                                                    "items": {
                                                        "description": "Describes the resource path.",
                                                        "properties": {
                                                            "Id": {
                                                                "description": "The ID of the resource path.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "[&\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the resource path.",
                                                                "maxLength": 255,
                                                                "minLength": 1,
                                                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/documents/{DocumentId}/versions": {
            "get": {
                "description": "<p>Retrieves the document versions for the specified document.</p> <p>By default, only active versions are returned.</p>",
                "operationId": "DescribeDocumentVersions",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "Limit",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "DocumentId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DocumentVersions": {
                                            "description": "The document versions.",
                                            "items": {
                                                "description": "Describes a version of a document.",
                                                "properties": {
                                                    "ContentCreatedTimestamp": {
                                                        "description": "The timestamp when the content of the document was originally created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ContentModifiedTimestamp": {
                                                        "description": "The timestamp when the content of the document was modified.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ContentType": {
                                                        "description": "The content type of the document.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "CreatedTimestamp": {
                                                        "description": "The timestamp when the document was first uploaded.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "CreatorId": {
                                                        "description": "The ID of the creator.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The ID of the version.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "ModifiedTimestamp": {
                                                        "description": "The timestamp when the document was last uploaded.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the version.",
                                                        "maxLength": 255,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                        "type": "string"
                                                    },
                                                    "Signature": {
                                                        "description": "The signature of the document.",
                                                        "maxLength": 128,
                                                        "minLength": 0,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Size": {
                                                        "description": "The size of the document, in bytes.",
                                                        "type": "integer"
                                                    },
                                                    "Source": {
                                                        "description": "The source of the document.",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "enum": [
                                                                        "ORIGINAL",
                                                                        "WITH_COMMENTS"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "format": "password",
                                                                    "maxLength": 1024,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the document.",
                                                        "enum": [
                                                            "INITIALIZED",
                                                            "ACTIVE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Thumbnail": {
                                                        "description": "The thumbnail of the document.",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "enum": [
                                                                        "SMALL",
                                                                        "SMALL_HQ",
                                                                        "LARGE"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "format": "password",
                                                                    "maxLength": 1024,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
                                            "maxLength": 2048,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/documents/{DocumentId}/versions/{VersionId}": {
            "delete": {
                "description": "Aborts the upload of the specified document version that was previously initiated by <a>InitiateDocumentVersionUpload</a>. The client should make this call only when it no longer intends to upload the document version, or fails to do so.",
                "operationId": "AbortDocumentVersionUpload",
                "parameters": [
                    {
                        "in": "path",
                        "name": "DocumentId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "VersionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Retrieves version metadata for the specified document.",
                "operationId": "GetDocumentVersion",
                "parameters": [
                    {
                        "in": "path",
                        "name": "DocumentId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "VersionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CustomMetadata": {
                                            "description": "The custom metadata on the document version.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 56,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 8,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "description": "The version metadata.",
                                            "properties": {
                                                "ContentCreatedTimestamp": {
                                                    "description": "The timestamp when the content of the document was originally created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ContentModifiedTimestamp": {
                                                    "description": "The timestamp when the content of the document was modified.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ContentType": {
                                                    "description": "The content type of the document.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "CreatedTimestamp": {
                                                    "description": "The timestamp when the document was first uploaded.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "CreatorId": {
                                                    "description": "The ID of the creator.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Id": {
                                                    "description": "The ID of the version.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "ModifiedTimestamp": {
                                                    "description": "The timestamp when the document was last uploaded.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the version.",
                                                    "maxLength": 255,
                                                    "minLength": 1,
                                                    "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                    "type": "string"
                                                },
                                                "Signature": {
                                                    "description": "The signature of the document.",
                                                    "maxLength": 128,
                                                    "minLength": 0,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Size": {
                                                    "description": "The size of the document, in bytes.",
                                                    "type": "integer"
                                                },
                                                "Source": {
                                                    "description": "The source of the document.",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "enum": [
                                                                    "ORIGINAL",
                                                                    "WITH_COMMENTS"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "format": "password",
                                                                "maxLength": 1024,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "Status": {
                                                    "description": "The status of the document.",
                                                    "enum": [
                                                        "INITIALIZED",
                                                        "ACTIVE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Thumbnail": {
                                                    "description": "The thumbnail of the document.",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "enum": [
                                                                    "SMALL",
                                                                    "SMALL_HQ",
                                                                    "LARGE"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "format": "password",
                                                                "maxLength": 1024,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "InvalidPasswordException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "patch": {
                "description": "<p>Changes the status of the document version to ACTIVE. </p> <p>Amazon WorkDocs also sets its document container to ACTIVE. This is the last step in a document upload, after the client uploads the document to an S3-presigned URL returned by <a>InitiateDocumentVersionUpload</a>. </p>",
                "operationId": "UpdateDocumentVersion",
                "parameters": [
                    {
                        "in": "path",
                        "name": "DocumentId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "VersionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "VersionStatus": {
                                        "description": "The status of the version.",
                                        "enum": [
                                            "ACTIVE"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/v1/documents/{DocumentId}/versions/{VersionId}/comment": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Adds a new comment to the specified document version.",
                "operationId": "CreateComment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "DocumentId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "VersionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Comment": {
                                            "description": "The comment that has been created.",
                                            "properties": {
                                                "CommentId": {
                                                    "description": "The ID of the comment.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Contributor": {
                                                    "description": "The details of the user who made the comment.",
                                                    "properties": {
                                                        "CreatedTimestamp": {
                                                            "description": "The time when the user was created.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "EmailAddress": {
                                                            "description": "The email address of the user.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                            "type": "string"
                                                        },
                                                        "GivenName": {
                                                            "description": "The given name of the user.",
                                                            "maxLength": 64,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "Id": {
                                                            "description": "The ID of the user.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "pattern": "[&\\w+-.@]+",
                                                            "type": "string"
                                                        },
                                                        "Locale": {
                                                            "description": "The locale of the user.",
                                                            "enum": [
                                                                "en",
                                                                "fr",
                                                                "ko",
                                                                "de",
                                                                "es",
                                                                "ja",
                                                                "ru",
                                                                "zh_CN",
                                                                "zh_TW",
                                                                "pt_BR",
                                                                "default"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "ModifiedTimestamp": {
                                                            "description": "The time when the user was modified.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "OrganizationId": {
                                                            "description": "The ID of the organization.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "pattern": "[&\\w+-.@]+",
                                                            "type": "string"
                                                        },
                                                        "RecycleBinFolderId": {
                                                            "description": "The ID of the recycle bin folder.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "pattern": "[\\w+-.@]+",
                                                            "type": "string"
                                                        },
                                                        "RootFolderId": {
                                                            "description": "The ID of the root folder.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "pattern": "[\\w+-.@]+",
                                                            "type": "string"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the user.",
                                                            "enum": [
                                                                "ACTIVE",
                                                                "INACTIVE",
                                                                "PENDING"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "Storage": {
                                                            "description": "The storage for the user.",
                                                            "properties": {
                                                                "StorageRule": {
                                                                    "description": "The storage for a user.",
                                                                    "properties": {
                                                                        "StorageAllocatedInBytes": {
                                                                            "description": "The amount of storage allocated, in bytes.",
                                                                            "minimum": 0,
                                                                            "type": "integer"
                                                                        },
                                                                        "StorageType": {
                                                                            "description": "The type of storage.",
                                                                            "enum": [
                                                                                "UNLIMITED",
                                                                                "QUOTA"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "StorageUtilizedInBytes": {
                                                                    "description": "The amount of storage used, in bytes.",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "Surname": {
                                                            "description": "The surname of the user.",
                                                            "maxLength": 64,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "TimeZoneId": {
                                                            "description": "The time zone ID of the user.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "Type": {
                                                            "description": "The type of user.",
                                                            "enum": [
                                                                "USER",
                                                                "ADMIN",
                                                                "POWERUSER",
                                                                "MINIMALUSER",
                                                                "WORKSPACESUSER"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "Username": {
                                                            "description": "The login name of the user.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "CreatedTimestamp": {
                                                    "description": "The time that the comment was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ParentId": {
                                                    "description": "The ID of the parent comment.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "RecipientId": {
                                                    "description": "If the comment is a reply to another user's comment, this field contains the user ID of the user being replied to.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the comment.",
                                                    "enum": [
                                                        "DRAFT",
                                                        "PUBLISHED",
                                                        "DELETED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Text": {
                                                    "description": "The text of the comment.",
                                                    "format": "password",
                                                    "maxLength": 2048,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "ThreadId": {
                                                    "description": "The ID of the root comment in the thread.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Visibility": {
                                                    "description": "The visibility of the comment. Options are either PRIVATE, where the comment is visible only to the comment author and document owner and co-owners, or PUBLIC, where the comment is visible to document owners, co-owners, and contributors.",
                                                    "enum": [
                                                        "PUBLIC",
                                                        "PRIVATE"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "CommentId"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "DocumentLockedForCommentsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "InvalidCommentOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "NotifyCollaborators": {
                                        "description": "Set this parameter to TRUE to send an email out to the document collaborators after the comment is created.",
                                        "type": "boolean"
                                    },
                                    "ParentId": {
                                        "description": "The ID of the parent comment.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "Text": {
                                        "description": "The text of the comment.",
                                        "format": "password",
                                        "maxLength": 2048,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "ThreadId": {
                                        "description": "The ID of the root comment in the thread.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "Visibility": {
                                        "description": "The visibility of the comment. Options are either PRIVATE, where the comment is visible only to the comment author and document owner and co-owners, or PUBLIC, where the comment is visible to document owners, co-owners, and contributors.",
                                        "enum": [
                                            "PUBLIC",
                                            "PRIVATE"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Text"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}": {
            "delete": {
                "description": "Deletes the specified comment from the document version.",
                "operationId": "DeleteComment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "DocumentId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "VersionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "CommentId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "DocumentLockedForCommentsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/documents/{DocumentId}/versions/{VersionId}/comments": {
            "get": {
                "description": "List all the comments for the specified document version.",
                "operationId": "DescribeComments",
                "parameters": [
                    {
                        "in": "path",
                        "name": "DocumentId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "VersionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Comments": {
                                            "description": "The list of comments for the specified document version.",
                                            "items": {
                                                "description": "Describes a comment.",
                                                "properties": {
                                                    "CommentId": {
                                                        "description": "The ID of the comment.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Contributor": {
                                                        "description": "The details of the user who made the comment.",
                                                        "properties": {
                                                            "CreatedTimestamp": {
                                                                "description": "The time when the user was created.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "EmailAddress": {
                                                                "description": "The email address of the user.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                                "type": "string"
                                                            },
                                                            "GivenName": {
                                                                "description": "The given name of the user.",
                                                                "maxLength": 64,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "Id": {
                                                                "description": "The ID of the user.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "[&\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "Locale": {
                                                                "description": "The locale of the user.",
                                                                "enum": [
                                                                    "en",
                                                                    "fr",
                                                                    "ko",
                                                                    "de",
                                                                    "es",
                                                                    "ja",
                                                                    "ru",
                                                                    "zh_CN",
                                                                    "zh_TW",
                                                                    "pt_BR",
                                                                    "default"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "ModifiedTimestamp": {
                                                                "description": "The time when the user was modified.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "OrganizationId": {
                                                                "description": "The ID of the organization.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "[&\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "RecycleBinFolderId": {
                                                                "description": "The ID of the recycle bin folder.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "[\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "RootFolderId": {
                                                                "description": "The ID of the root folder.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "[\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the user.",
                                                                "enum": [
                                                                    "ACTIVE",
                                                                    "INACTIVE",
                                                                    "PENDING"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Storage": {
                                                                "description": "The storage for the user.",
                                                                "properties": {
                                                                    "StorageRule": {
                                                                        "description": "The storage for a user.",
                                                                        "properties": {
                                                                            "StorageAllocatedInBytes": {
                                                                                "description": "The amount of storage allocated, in bytes.",
                                                                                "minimum": 0,
                                                                                "type": "integer"
                                                                            },
                                                                            "StorageType": {
                                                                                "description": "The type of storage.",
                                                                                "enum": [
                                                                                    "UNLIMITED",
                                                                                    "QUOTA"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "StorageUtilizedInBytes": {
                                                                        "description": "The amount of storage used, in bytes.",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "Surname": {
                                                                "description": "The surname of the user.",
                                                                "maxLength": 64,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "TimeZoneId": {
                                                                "description": "The time zone ID of the user.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "Type": {
                                                                "description": "The type of user.",
                                                                "enum": [
                                                                    "USER",
                                                                    "ADMIN",
                                                                    "POWERUSER",
                                                                    "MINIMALUSER",
                                                                    "WORKSPACESUSER"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Username": {
                                                                "description": "The login name of the user.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "CreatedTimestamp": {
                                                        "description": "The time that the comment was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ParentId": {
                                                        "description": "The ID of the parent comment.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "RecipientId": {
                                                        "description": "If the comment is a reply to another user's comment, this field contains the user ID of the user being replied to.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the comment.",
                                                        "enum": [
                                                            "DRAFT",
                                                            "PUBLISHED",
                                                            "DELETED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Text": {
                                                        "description": "The text of the comment.",
                                                        "format": "password",
                                                        "maxLength": 2048,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "ThreadId": {
                                                        "description": "The ID of the root comment in the thread.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Visibility": {
                                                        "description": "The visibility of the comment. Options are either PRIVATE, where the comment is visible only to the comment author and document owner and co-owners, or PUBLIC, where the comment is visible to document owners, co-owners, and contributors.",
                                                        "enum": [
                                                            "PUBLIC",
                                                            "PRIVATE"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "CommentId"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": "The marker for the next set of results. This marker was received from a previous call.",
                                            "maxLength": 2048,
                                            "minLength": 1,
                                            "pattern": "[\\u0000-\\u00FF]+",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/folders": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a folder with the specified name and parent folder.",
                "operationId": "CreateFolder",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Metadata": {
                                            "description": "The metadata of the folder.",
                                            "properties": {
                                                "CreatedTimestamp": {
                                                    "description": "The time when the folder was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "CreatorId": {
                                                    "description": "The ID of the creator.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Id": {
                                                    "description": "The ID of the folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Labels": {
                                                    "description": "List of labels on the folder.",
                                                    "items": {
                                                        "maxLength": 32,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                        "type": "string"
                                                    },
                                                    "maxItems": 20,
                                                    "type": "array"
                                                },
                                                "LatestVersionSize": {
                                                    "description": "The size of the latest version of the folder metadata.",
                                                    "type": "integer"
                                                },
                                                "ModifiedTimestamp": {
                                                    "description": "The time when the folder was updated.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the folder.",
                                                    "maxLength": 255,
                                                    "minLength": 1,
                                                    "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                    "type": "string"
                                                },
                                                "ParentFolderId": {
                                                    "description": "The ID of the parent folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "ResourceState": {
                                                    "description": "The resource state of the folder.",
                                                    "enum": [
                                                        "ACTIVE",
                                                        "RESTORING",
                                                        "RECYCLING",
                                                        "RECYCLED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Signature": {
                                                    "description": "The unique identifier created from the subfolders and documents of the folder.",
                                                    "maxLength": 128,
                                                    "minLength": 0,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Size": {
                                                    "description": "The size of the folder metadata.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "EntityAlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ConflictingOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Name": {
                                        "description": "The name of the new folder.",
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                        "type": "string"
                                    },
                                    "ParentFolderId": {
                                        "description": "The ID of the parent folder.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[\\w+-.@]+",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ParentFolderId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/v1/folders/{FolderId}": {
            "delete": {
                "description": "Permanently deletes the specified folder and its contents.",
                "operationId": "DeleteFolder",
                "parameters": [
                    {
                        "in": "path",
                        "name": "FolderId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ConflictingOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Retrieves the metadata of the specified folder.",
                "operationId": "GetFolder",
                "parameters": [
                    {
                        "in": "path",
                        "name": "FolderId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CustomMetadata": {
                                            "description": "The custom metadata on the folder.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 56,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 8,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "Metadata": {
                                            "description": "The metadata of the folder.",
                                            "properties": {
                                                "CreatedTimestamp": {
                                                    "description": "The time when the folder was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "CreatorId": {
                                                    "description": "The ID of the creator.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Id": {
                                                    "description": "The ID of the folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Labels": {
                                                    "description": "List of labels on the folder.",
                                                    "items": {
                                                        "maxLength": 32,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                        "type": "string"
                                                    },
                                                    "maxItems": 20,
                                                    "type": "array"
                                                },
                                                "LatestVersionSize": {
                                                    "description": "The size of the latest version of the folder metadata.",
                                                    "type": "integer"
                                                },
                                                "ModifiedTimestamp": {
                                                    "description": "The time when the folder was updated.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the folder.",
                                                    "maxLength": 255,
                                                    "minLength": 1,
                                                    "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                    "type": "string"
                                                },
                                                "ParentFolderId": {
                                                    "description": "The ID of the parent folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "ResourceState": {
                                                    "description": "The resource state of the folder.",
                                                    "enum": [
                                                        "ACTIVE",
                                                        "RESTORING",
                                                        "RECYCLING",
                                                        "RECYCLED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Signature": {
                                                    "description": "The unique identifier created from the subfolders and documents of the folder.",
                                                    "maxLength": 128,
                                                    "minLength": 0,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Size": {
                                                    "description": "The size of the folder metadata.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "patch": {
                "description": "Updates the specified attributes of the specified folder. The user must have access to both the folder and its parent folder, if applicable.",
                "operationId": "UpdateFolder",
                "parameters": [
                    {
                        "in": "path",
                        "name": "FolderId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "EntityAlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ConflictingOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "489": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Name": {
                                        "description": "The name of the folder.",
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                        "type": "string"
                                    },
                                    "ParentFolderId": {
                                        "description": "The ID of the parent folder.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "ResourceState": {
                                        "description": "The resource state of the folder. Only ACTIVE and RECYCLED are accepted values from the API.",
                                        "enum": [
                                            "ACTIVE",
                                            "RESTORING",
                                            "RECYCLING",
                                            "RECYCLED"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/v1/folders/{FolderId}/contents": {
            "delete": {
                "description": "Deletes the contents of the specified folder.",
                "operationId": "DeleteFolderContents",
                "parameters": [
                    {
                        "in": "path",
                        "name": "FolderId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ConflictingOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "<p>Describes the contents of the specified folder, including its documents and subfolders.</p> <p>By default, Amazon WorkDocs returns the first 100 active document and folder metadata items. If there are more results, the response includes a marker that you can use to request the next set of results. You can also request initialized documents.</p>",
                "operationId": "DescribeFolderContents",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "Limit",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "FolderId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Documents": {
                                            "description": "The documents in the specified folder.",
                                            "items": {
                                                "description": "Describes the document.",
                                                "properties": {
                                                    "CreatedTimestamp": {
                                                        "description": "The time when the document was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "CreatorId": {
                                                        "description": "The ID of the creator.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The ID of the document.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Labels": {
                                                        "description": "List of labels on the document.",
                                                        "items": {
                                                            "maxLength": 32,
                                                            "minLength": 1,
                                                            "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                            "type": "string"
                                                        },
                                                        "maxItems": 20,
                                                        "type": "array"
                                                    },
                                                    "LatestVersionMetadata": {
                                                        "description": "The latest version of the document.",
                                                        "properties": {
                                                            "ContentCreatedTimestamp": {
                                                                "description": "The timestamp when the content of the document was originally created.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "ContentModifiedTimestamp": {
                                                                "description": "The timestamp when the content of the document was modified.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "ContentType": {
                                                                "description": "The content type of the document.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "CreatedTimestamp": {
                                                                "description": "The timestamp when the document was first uploaded.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "CreatorId": {
                                                                "description": "The ID of the creator.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "[&\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "Id": {
                                                                "description": "The ID of the version.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "[\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "ModifiedTimestamp": {
                                                                "description": "The timestamp when the document was last uploaded.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the version.",
                                                                "maxLength": 255,
                                                                "minLength": 1,
                                                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                                "type": "string"
                                                            },
                                                            "Signature": {
                                                                "description": "The signature of the document.",
                                                                "maxLength": 128,
                                                                "minLength": 0,
                                                                "pattern": "[&\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "Size": {
                                                                "description": "The size of the document, in bytes.",
                                                                "type": "integer"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the document.",
                                                                "items": {
                                                                    "properties": {
                                                                        "key": {
                                                                            "enum": [
                                                                                "ORIGINAL",
                                                                                "WITH_COMMENTS"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "format": "password",
                                                                            "maxLength": 1024,
                                                                            "minLength": 1,
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the document.",
                                                                "enum": [
                                                                    "INITIALIZED",
                                                                    "ACTIVE"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Thumbnail": {
                                                                "description": "The thumbnail of the document.",
                                                                "items": {
                                                                    "properties": {
                                                                        "key": {
                                                                            "enum": [
                                                                                "SMALL",
                                                                                "SMALL_HQ",
                                                                                "LARGE"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "format": "password",
                                                                            "maxLength": 1024,
                                                                            "minLength": 1,
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ModifiedTimestamp": {
                                                        "description": "The time when the document was updated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ParentFolderId": {
                                                        "description": "The ID of the parent folder.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "ResourceState": {
                                                        "description": "The resource state.",
                                                        "enum": [
                                                            "ACTIVE",
                                                            "RESTORING",
                                                            "RECYCLING",
                                                            "RECYCLED"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Folders": {
                                            "description": "The subfolders in the specified folder.",
                                            "items": {
                                                "description": "Describes a folder.",
                                                "properties": {
                                                    "CreatedTimestamp": {
                                                        "description": "The time when the folder was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "CreatorId": {
                                                        "description": "The ID of the creator.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The ID of the folder.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Labels": {
                                                        "description": "List of labels on the folder.",
                                                        "items": {
                                                            "maxLength": 32,
                                                            "minLength": 1,
                                                            "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                            "type": "string"
                                                        },
                                                        "maxItems": 20,
                                                        "type": "array"
                                                    },
                                                    "LatestVersionSize": {
                                                        "description": "The size of the latest version of the folder metadata.",
                                                        "type": "integer"
                                                    },
                                                    "ModifiedTimestamp": {
                                                        "description": "The time when the folder was updated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the folder.",
                                                        "maxLength": 255,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                        "type": "string"
                                                    },
                                                    "ParentFolderId": {
                                                        "description": "The ID of the parent folder.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "ResourceState": {
                                                        "description": "The resource state of the folder.",
                                                        "enum": [
                                                            "ACTIVE",
                                                            "RESTORING",
                                                            "RECYCLING",
                                                            "RECYCLED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Signature": {
                                                        "description": "The unique identifier created from the subfolders and documents of the folder.",
                                                        "maxLength": 128,
                                                        "minLength": 0,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Size": {
                                                        "description": "The size of the folder metadata.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
                                            "maxLength": 2048,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/folders/{FolderId}/path": {
            "get": {
                "description": "<p>Retrieves the path information (the hierarchy from the root folder) for the specified folder.</p> <p>By default, Amazon WorkDocs returns a maximum of 100 levels upwards from the requested folder and only includes the IDs of the parent folders in the path. You can limit the maximum number of levels. You can also request the parent folder names.</p>",
                "operationId": "GetFolderPath",
                "parameters": [
                    {
                        "in": "path",
                        "name": "FolderId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Path": {
                                            "description": "The path information.",
                                            "properties": {
                                                "Components": {
                                                    "description": "The components of the resource path.",
                                                    "items": {
                                                        "description": "Describes the resource path.",
                                                        "properties": {
                                                            "Id": {
                                                                "description": "The ID of the resource path.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "[&\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the resource path.",
                                                                "maxLength": 255,
                                                                "minLength": 1,
                                                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/groups": {
            "get": {
                "description": "Describes the groups specified by the query. Groups are defined by the underlying Active Directory.",
                "operationId": "DescribeGroups",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Groups": {
                                            "description": "The list of groups.",
                                            "items": {
                                                "description": "Describes the metadata of a user group.",
                                                "properties": {
                                                    "Id": {
                                                        "description": "The ID of the user group.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the group.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
                                            "maxLength": 2048,
                                            "minLength": 1,
                                            "pattern": "[\\u0000-\\u00FF]+",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/me": {
            "get": {
                "description": "Retrieves details of the current user for whom the authentication token was generated. This is not a valid action for SigV4 (administrative API) clients.",
                "operationId": "GetCurrentUser",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "User": {
                                            "description": "Metadata of the user.",
                                            "properties": {
                                                "CreatedTimestamp": {
                                                    "description": "The time when the user was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "EmailAddress": {
                                                    "description": "The email address of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                    "type": "string"
                                                },
                                                "GivenName": {
                                                    "description": "The given name of the user.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Id": {
                                                    "description": "The ID of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Locale": {
                                                    "description": "The locale of the user.",
                                                    "enum": [
                                                        "en",
                                                        "fr",
                                                        "ko",
                                                        "de",
                                                        "es",
                                                        "ja",
                                                        "ru",
                                                        "zh_CN",
                                                        "zh_TW",
                                                        "pt_BR",
                                                        "default"
                                                    ],
                                                    "type": "string"
                                                },
                                                "ModifiedTimestamp": {
                                                    "description": "The time when the user was modified.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "OrganizationId": {
                                                    "description": "The ID of the organization.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "RecycleBinFolderId": {
                                                    "description": "The ID of the recycle bin folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "RootFolderId": {
                                                    "description": "The ID of the root folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the user.",
                                                    "enum": [
                                                        "ACTIVE",
                                                        "INACTIVE",
                                                        "PENDING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Storage": {
                                                    "description": "The storage for the user.",
                                                    "properties": {
                                                        "StorageRule": {
                                                            "description": "The storage for a user.",
                                                            "properties": {
                                                                "StorageAllocatedInBytes": {
                                                                    "description": "The amount of storage allocated, in bytes.",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "StorageType": {
                                                                    "description": "The type of storage.",
                                                                    "enum": [
                                                                        "UNLIMITED",
                                                                        "QUOTA"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "StorageUtilizedInBytes": {
                                                            "description": "The amount of storage used, in bytes.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Surname": {
                                                    "description": "The surname of the user.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "TimeZoneId": {
                                                    "description": "The time zone ID of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type of user.",
                                                    "enum": [
                                                        "USER",
                                                        "ADMIN",
                                                        "POWERUSER",
                                                        "MINIMALUSER",
                                                        "WORKSPACESUSER"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Username": {
                                                    "description": "The login name of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/me/root": {
            "get": {
                "description": "<p>Describes the current user's special folders; the <code>RootFolder</code> and the <code>RecycleBin</code>. <code>RootFolder</code> is the root of user's files and folders and <code>RecycleBin</code> is the root of recycled items. This is not a valid action for SigV4 (administrative API) clients.</p> <p>This action requires an authentication token. To get an authentication token, register an application with Amazon WorkDocs. For more information, see <a href=\"https://docs.aws.amazon.com/workdocs/latest/developerguide/wd-auth-user.html\">Authentication and Access Control for User Applications</a> in the <i>Amazon WorkDocs Developer Guide</i>.</p>",
                "operationId": "DescribeRootFolders",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Folders": {
                                            "description": "The user's special folders.",
                                            "items": {
                                                "description": "Describes a folder.",
                                                "properties": {
                                                    "CreatedTimestamp": {
                                                        "description": "The time when the folder was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "CreatorId": {
                                                        "description": "The ID of the creator.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The ID of the folder.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Labels": {
                                                        "description": "List of labels on the folder.",
                                                        "items": {
                                                            "maxLength": 32,
                                                            "minLength": 1,
                                                            "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                            "type": "string"
                                                        },
                                                        "maxItems": 20,
                                                        "type": "array"
                                                    },
                                                    "LatestVersionSize": {
                                                        "description": "The size of the latest version of the folder metadata.",
                                                        "type": "integer"
                                                    },
                                                    "ModifiedTimestamp": {
                                                        "description": "The time when the folder was updated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the folder.",
                                                        "maxLength": 255,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                        "type": "string"
                                                    },
                                                    "ParentFolderId": {
                                                        "description": "The ID of the parent folder.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "ResourceState": {
                                                        "description": "The resource state of the folder.",
                                                        "enum": [
                                                            "ACTIVE",
                                                            "RESTORING",
                                                            "RECYCLING",
                                                            "RECYCLED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Signature": {
                                                        "description": "The unique identifier created from the subfolders and documents of the folder.",
                                                        "maxLength": 128,
                                                        "minLength": 0,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Size": {
                                                        "description": "The size of the folder metadata.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": "The marker for the next set of results.",
                                            "maxLength": 2048,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/organizations/{OrganizationId}/subscriptions": {
            "get": {
                "description": "Lists the specified notification subscriptions.",
                "operationId": "DescribeNotificationSubscriptions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "OrganizationId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Marker": {
                                            "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
                                            "maxLength": 2048,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Subscriptions": {
                                            "description": "The subscriptions.",
                                            "items": {
                                                "description": "Describes a subscription.",
                                                "properties": {
                                                    "EndPoint": {
                                                        "description": "The endpoint of the subscription.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Protocol": {
                                                        "description": "The protocol of the subscription.",
                                                        "enum": [
                                                            "HTTPS"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "SubscriptionId": {
                                                        "description": "The ID of the subscription.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 256,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Configure Amazon WorkDocs to use Amazon SNS notifications. The endpoint receives a confirmation message, and must confirm the subscription.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/workdocs/latest/developerguide/subscribe-notifications.html\">Subscribe to Notifications</a> in the <i>Amazon WorkDocs Developer Guide</i>.</p>",
                "operationId": "CreateNotificationSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "OrganizationId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Subscription": {
                                            "description": "The subscription.",
                                            "properties": {
                                                "EndPoint": {
                                                    "description": "The endpoint of the subscription.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Protocol": {
                                                    "description": "The protocol of the subscription.",
                                                    "enum": [
                                                        "HTTPS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "SubscriptionId": {
                                                    "description": "The ID of the subscription.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "TooManySubscriptionsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Endpoint": {
                                        "description": "The endpoint to receive the notifications. If the protocol is HTTPS, the endpoint is a URL that begins with <code>https</code>.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Protocol": {
                                        "description": "The protocol to use. The supported value is https, which delivers JSON-encoded messages using HTTPS POST.",
                                        "enum": [
                                            "HTTPS"
                                        ],
                                        "type": "string"
                                    },
                                    "SubscriptionType": {
                                        "description": "The notification type.",
                                        "enum": [
                                            "ALL"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Endpoint",
                                    "Protocol",
                                    "SubscriptionType"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}": {
            "delete": {
                "description": "Deletes the specified subscription from the specified organization.",
                "operationId": "DeleteNotificationSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "OrganizationId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "SubscriptionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/resources": {
            "get": {
                "description": "Retrieves a collection of resources, including folders and documents. The only <code>CollectionType</code> supported is <code>SHARED_WITH_ME</code>.",
                "operationId": "GetResources",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Documents": {
                                            "description": "The documents in the specified collection.",
                                            "items": {
                                                "description": "Describes the document.",
                                                "properties": {
                                                    "CreatedTimestamp": {
                                                        "description": "The time when the document was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "CreatorId": {
                                                        "description": "The ID of the creator.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The ID of the document.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Labels": {
                                                        "description": "List of labels on the document.",
                                                        "items": {
                                                            "maxLength": 32,
                                                            "minLength": 1,
                                                            "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                            "type": "string"
                                                        },
                                                        "maxItems": 20,
                                                        "type": "array"
                                                    },
                                                    "LatestVersionMetadata": {
                                                        "description": "The latest version of the document.",
                                                        "properties": {
                                                            "ContentCreatedTimestamp": {
                                                                "description": "The timestamp when the content of the document was originally created.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "ContentModifiedTimestamp": {
                                                                "description": "The timestamp when the content of the document was modified.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "ContentType": {
                                                                "description": "The content type of the document.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "CreatedTimestamp": {
                                                                "description": "The timestamp when the document was first uploaded.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "CreatorId": {
                                                                "description": "The ID of the creator.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "[&\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "Id": {
                                                                "description": "The ID of the version.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "[\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "ModifiedTimestamp": {
                                                                "description": "The timestamp when the document was last uploaded.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the version.",
                                                                "maxLength": 255,
                                                                "minLength": 1,
                                                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                                "type": "string"
                                                            },
                                                            "Signature": {
                                                                "description": "The signature of the document.",
                                                                "maxLength": 128,
                                                                "minLength": 0,
                                                                "pattern": "[&\\w+-.@]+",
                                                                "type": "string"
                                                            },
                                                            "Size": {
                                                                "description": "The size of the document, in bytes.",
                                                                "type": "integer"
                                                            },
                                                            "Source": {
                                                                "description": "The source of the document.",
                                                                "items": {
                                                                    "properties": {
                                                                        "key": {
                                                                            "enum": [
                                                                                "ORIGINAL",
                                                                                "WITH_COMMENTS"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "format": "password",
                                                                            "maxLength": 1024,
                                                                            "minLength": 1,
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the document.",
                                                                "enum": [
                                                                    "INITIALIZED",
                                                                    "ACTIVE"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Thumbnail": {
                                                                "description": "The thumbnail of the document.",
                                                                "items": {
                                                                    "properties": {
                                                                        "key": {
                                                                            "enum": [
                                                                                "SMALL",
                                                                                "SMALL_HQ",
                                                                                "LARGE"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "format": "password",
                                                                            "maxLength": 1024,
                                                                            "minLength": 1,
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ModifiedTimestamp": {
                                                        "description": "The time when the document was updated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ParentFolderId": {
                                                        "description": "The ID of the parent folder.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "ResourceState": {
                                                        "description": "The resource state.",
                                                        "enum": [
                                                            "ACTIVE",
                                                            "RESTORING",
                                                            "RECYCLING",
                                                            "RECYCLED"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Folders": {
                                            "description": "The folders in the specified folder.",
                                            "items": {
                                                "description": "Describes a folder.",
                                                "properties": {
                                                    "CreatedTimestamp": {
                                                        "description": "The time when the folder was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "CreatorId": {
                                                        "description": "The ID of the creator.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The ID of the folder.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Labels": {
                                                        "description": "List of labels on the folder.",
                                                        "items": {
                                                            "maxLength": 32,
                                                            "minLength": 1,
                                                            "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                            "type": "string"
                                                        },
                                                        "maxItems": 20,
                                                        "type": "array"
                                                    },
                                                    "LatestVersionSize": {
                                                        "description": "The size of the latest version of the folder metadata.",
                                                        "type": "integer"
                                                    },
                                                    "ModifiedTimestamp": {
                                                        "description": "The time when the folder was updated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the folder.",
                                                        "maxLength": 255,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                                        "type": "string"
                                                    },
                                                    "ParentFolderId": {
                                                        "description": "The ID of the parent folder.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "ResourceState": {
                                                        "description": "The resource state of the folder.",
                                                        "enum": [
                                                            "ACTIVE",
                                                            "RESTORING",
                                                            "RECYCLING",
                                                            "RECYCLED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Signature": {
                                                        "description": "The unique identifier created from the subfolders and documents of the folder.",
                                                        "maxLength": 128,
                                                        "minLength": 0,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Size": {
                                                        "description": "The size of the folder metadata.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
                                            "maxLength": 2048,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/resources/{ResourceId}/customMetadata": {
            "delete": {
                "description": "Deletes custom metadata from the specified resource.",
                "operationId": "DeleteCustomMetadata",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ResourceId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Adds one or more custom properties to the specified resource (a folder, document, or version).",
                "operationId": "CreateCustomMetadata",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ResourceId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ProhibitedStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "CustomMetadataLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CustomMetadata": {
                                        "description": "Custom metadata in the form of name-value pairs.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 56,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 8,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "CustomMetadata"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/v1/resources/{ResourceId}/labels": {
            "delete": {
                "description": "Deletes the specified list of labels from a resource.",
                "operationId": "DeleteLabels",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ResourceId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Adds the specified list of labels to the given resource (a document or folder)",
                "operationId": "CreateLabels",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ResourceId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TooManyLabelsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Labels": {
                                        "description": "List of labels to add to the resource.",
                                        "items": {
                                            "maxLength": 32,
                                            "minLength": 1,
                                            "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                            "type": "string"
                                        },
                                        "maxItems": 20,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Labels"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/v1/resources/{ResourceId}/permissions": {
            "delete": {
                "description": "Removes all the permissions from the specified resource.",
                "operationId": "RemoveAllResourcePermissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ResourceId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Describes the permissions of a specified resource.",
                "operationId": "DescribeResourcePermissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ResourceId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Marker": {
                                            "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
                                            "maxLength": 2048,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Principals": {
                                            "description": "The principals.",
                                            "items": {
                                                "description": "Describes a resource.",
                                                "properties": {
                                                    "Id": {
                                                        "description": "The ID of the resource.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Roles": {
                                                        "description": "The permission information for the resource.",
                                                        "items": {
                                                            "description": "Describes the permissions.",
                                                            "properties": {
                                                                "Role": {
                                                                    "description": "The role of the user.",
                                                                    "enum": [
                                                                        "VIEWER",
                                                                        "CONTRIBUTOR",
                                                                        "OWNER",
                                                                        "COOWNER"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Type": {
                                                                    "description": "The type of permissions.",
                                                                    "enum": [
                                                                        "DIRECT",
                                                                        "INHERITED"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "Type": {
                                                        "description": "The type of resource.",
                                                        "enum": [
                                                            "USER",
                                                            "GROUP",
                                                            "INVITE",
                                                            "ANONYMOUS",
                                                            "ORGANIZATION"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a set of permissions for the specified folder or document. The resource permissions are overwritten if the principals already have different permissions.",
                "operationId": "AddResourcePermissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ResourceId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ShareResults": {
                                            "description": "The share results.",
                                            "items": {
                                                "description": "Describes the share results of a resource.",
                                                "properties": {
                                                    "InviteePrincipalId": {
                                                        "description": "The ID of the invited user.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "PrincipalId": {
                                                        "description": "The ID of the principal.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Role": {
                                                        "description": "The role.",
                                                        "enum": [
                                                            "VIEWER",
                                                            "CONTRIBUTOR",
                                                            "OWNER",
                                                            "COOWNER"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "ShareId": {
                                                        "description": "The ID of the resource that was shared.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status.",
                                                        "enum": [
                                                            "SUCCESS",
                                                            "FAILURE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "StatusMessage": {
                                                        "description": "The status message.",
                                                        "format": "password",
                                                        "maxLength": 2048,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "NotificationOptions": {
                                        "description": "The notification options.",
                                        "properties": {
                                            "EmailMessage": {
                                                "description": "Text value to be included in the email body.",
                                                "format": "password",
                                                "maxLength": 2048,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "SendEmail": {
                                                "description": "Boolean value to indicate an email notification should be sent to the receipients.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Principals": {
                                        "description": "The users, groups, or organization being granted permission.",
                                        "items": {
                                            "description": "Describes the recipient type and ID, if available.",
                                            "properties": {
                                                "Id": {
                                                    "description": "The ID of the recipient.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Role": {
                                                    "description": "The role of the recipient.",
                                                    "enum": [
                                                        "VIEWER",
                                                        "CONTRIBUTOR",
                                                        "OWNER",
                                                        "COOWNER"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type of the recipient.",
                                                    "enum": [
                                                        "USER",
                                                        "GROUP",
                                                        "INVITE",
                                                        "ANONYMOUS",
                                                        "ORGANIZATION"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Id",
                                                "Type",
                                                "Role"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Principals"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/v1/resources/{ResourceId}/permissions/{PrincipalId}": {
            "delete": {
                "description": "Removes the permission for the specified principal from the specified resource.",
                "operationId": "RemoveResourcePermission",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ResourceId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "PrincipalId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/v1/users": {
            "get": {
                "description": "<p>Describes the specified users. You can describe all users or filter the results (for example, by status or organization).</p> <p>By default, Amazon WorkDocs returns the first 24 active or pending users. If there are more results, the response includes a marker that you can use to request the next set of results.</p>",
                "operationId": "DescribeUsers",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "Limit",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Marker": {
                                            "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
                                            "maxLength": 2048,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "TotalNumberOfUsers": {
                                            "description": "The total number of users included in the results.",
                                            "type": "integer"
                                        },
                                        "Users": {
                                            "description": "The users.",
                                            "items": {
                                                "description": "Describes a user.",
                                                "properties": {
                                                    "CreatedTimestamp": {
                                                        "description": "The time when the user was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "EmailAddress": {
                                                        "description": "The email address of the user.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                        "type": "string"
                                                    },
                                                    "GivenName": {
                                                        "description": "The given name of the user.",
                                                        "maxLength": 64,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The ID of the user.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Locale": {
                                                        "description": "The locale of the user.",
                                                        "enum": [
                                                            "en",
                                                            "fr",
                                                            "ko",
                                                            "de",
                                                            "es",
                                                            "ja",
                                                            "ru",
                                                            "zh_CN",
                                                            "zh_TW",
                                                            "pt_BR",
                                                            "default"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "ModifiedTimestamp": {
                                                        "description": "The time when the user was modified.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "OrganizationId": {
                                                        "description": "The ID of the organization.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "RecycleBinFolderId": {
                                                        "description": "The ID of the recycle bin folder.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "RootFolderId": {
                                                        "description": "The ID of the root folder.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the user.",
                                                        "enum": [
                                                            "ACTIVE",
                                                            "INACTIVE",
                                                            "PENDING"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Storage": {
                                                        "description": "The storage for the user.",
                                                        "properties": {
                                                            "StorageRule": {
                                                                "description": "The storage for a user.",
                                                                "properties": {
                                                                    "StorageAllocatedInBytes": {
                                                                        "description": "The amount of storage allocated, in bytes.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "StorageType": {
                                                                        "description": "The type of storage.",
                                                                        "enum": [
                                                                            "UNLIMITED",
                                                                            "QUOTA"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "StorageUtilizedInBytes": {
                                                                "description": "The amount of storage used, in bytes.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Surname": {
                                                        "description": "The surname of the user.",
                                                        "maxLength": 64,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "TimeZoneId": {
                                                        "description": "The time zone ID of the user.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type of user.",
                                                        "enum": [
                                                            "USER",
                                                            "ADMIN",
                                                            "POWERUSER",
                                                            "MINIMALUSER",
                                                            "WORKSPACESUSER"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Username": {
                                                        "description": "The login name of the user.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "RequestedEntityTooLargeException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a user in a Simple AD or Microsoft AD directory. The status of a newly created user is \"ACTIVE\". New users can access Amazon WorkDocs.",
                "operationId": "CreateUser",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "User": {
                                            "description": "The user information.",
                                            "properties": {
                                                "CreatedTimestamp": {
                                                    "description": "The time when the user was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "EmailAddress": {
                                                    "description": "The email address of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                    "type": "string"
                                                },
                                                "GivenName": {
                                                    "description": "The given name of the user.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Id": {
                                                    "description": "The ID of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Locale": {
                                                    "description": "The locale of the user.",
                                                    "enum": [
                                                        "en",
                                                        "fr",
                                                        "ko",
                                                        "de",
                                                        "es",
                                                        "ja",
                                                        "ru",
                                                        "zh_CN",
                                                        "zh_TW",
                                                        "pt_BR",
                                                        "default"
                                                    ],
                                                    "type": "string"
                                                },
                                                "ModifiedTimestamp": {
                                                    "description": "The time when the user was modified.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "OrganizationId": {
                                                    "description": "The ID of the organization.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "RecycleBinFolderId": {
                                                    "description": "The ID of the recycle bin folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "RootFolderId": {
                                                    "description": "The ID of the root folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the user.",
                                                    "enum": [
                                                        "ACTIVE",
                                                        "INACTIVE",
                                                        "PENDING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Storage": {
                                                    "description": "The storage for the user.",
                                                    "properties": {
                                                        "StorageRule": {
                                                            "description": "The storage for a user.",
                                                            "properties": {
                                                                "StorageAllocatedInBytes": {
                                                                    "description": "The amount of storage allocated, in bytes.",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "StorageType": {
                                                                    "description": "The type of storage.",
                                                                    "enum": [
                                                                        "UNLIMITED",
                                                                        "QUOTA"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "StorageUtilizedInBytes": {
                                                            "description": "The amount of storage used, in bytes.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Surname": {
                                                    "description": "The surname of the user.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "TimeZoneId": {
                                                    "description": "The time zone ID of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type of user.",
                                                    "enum": [
                                                        "USER",
                                                        "ADMIN",
                                                        "POWERUSER",
                                                        "MINIMALUSER",
                                                        "WORKSPACESUSER"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Username": {
                                                    "description": "The login name of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityAlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "EmailAddress": {
                                        "description": "The email address of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                        "type": "string"
                                    },
                                    "GivenName": {
                                        "description": "The given name of the user.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "OrganizationId": {
                                        "description": "The ID of the organization.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[&\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "Password": {
                                        "description": "The password of the user.",
                                        "format": "password",
                                        "maxLength": 32,
                                        "minLength": 4,
                                        "pattern": "[\\u0020-\\u00FF]+",
                                        "type": "string"
                                    },
                                    "StorageRule": {
                                        "description": "The amount of storage for the user.",
                                        "properties": {
                                            "StorageAllocatedInBytes": {
                                                "description": "The amount of storage allocated, in bytes.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "StorageType": {
                                                "description": "The type of storage.",
                                                "enum": [
                                                    "UNLIMITED",
                                                    "QUOTA"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Surname": {
                                        "description": "The surname of the user.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "TimeZoneId": {
                                        "description": "The time zone ID of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Username": {
                                        "description": "The login name of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Username",
                                    "GivenName",
                                    "Surname",
                                    "Password"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/v1/users/{UserId}": {
            "delete": {
                "description": "Deletes the specified user from a Simple AD or Microsoft AD directory.",
                "operationId": "DeleteUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "UserId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "patch": {
                "description": "Updates the specified attributes of the specified user, and grants or revokes administrative privileges to the Amazon WorkDocs site.",
                "operationId": "UpdateUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "UserId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "User": {
                                            "description": "The user information.",
                                            "properties": {
                                                "CreatedTimestamp": {
                                                    "description": "The time when the user was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "EmailAddress": {
                                                    "description": "The email address of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                    "type": "string"
                                                },
                                                "GivenName": {
                                                    "description": "The given name of the user.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Id": {
                                                    "description": "The ID of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Locale": {
                                                    "description": "The locale of the user.",
                                                    "enum": [
                                                        "en",
                                                        "fr",
                                                        "ko",
                                                        "de",
                                                        "es",
                                                        "ja",
                                                        "ru",
                                                        "zh_CN",
                                                        "zh_TW",
                                                        "pt_BR",
                                                        "default"
                                                    ],
                                                    "type": "string"
                                                },
                                                "ModifiedTimestamp": {
                                                    "description": "The time when the user was modified.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "OrganizationId": {
                                                    "description": "The ID of the organization.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "RecycleBinFolderId": {
                                                    "description": "The ID of the recycle bin folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "RootFolderId": {
                                                    "description": "The ID of the root folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the user.",
                                                    "enum": [
                                                        "ACTIVE",
                                                        "INACTIVE",
                                                        "PENDING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Storage": {
                                                    "description": "The storage for the user.",
                                                    "properties": {
                                                        "StorageRule": {
                                                            "description": "The storage for a user.",
                                                            "properties": {
                                                                "StorageAllocatedInBytes": {
                                                                    "description": "The amount of storage allocated, in bytes.",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "StorageType": {
                                                                    "description": "The type of storage.",
                                                                    "enum": [
                                                                        "UNLIMITED",
                                                                        "QUOTA"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "StorageUtilizedInBytes": {
                                                            "description": "The amount of storage used, in bytes.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Surname": {
                                                    "description": "The surname of the user.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "TimeZoneId": {
                                                    "description": "The time zone ID of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type of user.",
                                                    "enum": [
                                                        "USER",
                                                        "ADMIN",
                                                        "POWERUSER",
                                                        "MINIMALUSER",
                                                        "WORKSPACESUSER"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Username": {
                                                    "description": "The login name of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "IllegalUserStateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "DeactivatingLastSystemUserException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "GivenName": {
                                        "description": "The given name of the user.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "GrantPoweruserPrivileges": {
                                        "description": "Boolean value to determine whether the user is granted Poweruser privileges.",
                                        "enum": [
                                            "TRUE",
                                            "FALSE"
                                        ],
                                        "type": "string"
                                    },
                                    "Locale": {
                                        "description": "The locale of the user.",
                                        "enum": [
                                            "en",
                                            "fr",
                                            "ko",
                                            "de",
                                            "es",
                                            "ja",
                                            "ru",
                                            "zh_CN",
                                            "zh_TW",
                                            "pt_BR",
                                            "default"
                                        ],
                                        "type": "string"
                                    },
                                    "StorageRule": {
                                        "description": "The amount of storage for the user.",
                                        "properties": {
                                            "StorageAllocatedInBytes": {
                                                "description": "The amount of storage allocated, in bytes.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "StorageType": {
                                                "description": "The type of storage.",
                                                "enum": [
                                                    "UNLIMITED",
                                                    "QUOTA"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Surname": {
                                        "description": "The surname of the user.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "TimeZoneId": {
                                        "description": "The time zone ID of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The type of the user.",
                                        "enum": [
                                            "USER",
                                            "ADMIN",
                                            "POWERUSER",
                                            "MINIMALUSER",
                                            "WORKSPACESUSER"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/v1/users/{UserId}/activation": {
            "delete": {
                "description": "Deactivates the specified user, which revokes the user's access to Amazon WorkDocs.",
                "operationId": "DeactivateUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "UserId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Activates the specified user. Only active users can access Amazon WorkDocs.",
                "operationId": "ActivateUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "UserId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "User": {
                                            "description": "The user information.",
                                            "properties": {
                                                "CreatedTimestamp": {
                                                    "description": "The time when the user was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "EmailAddress": {
                                                    "description": "The email address of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                    "type": "string"
                                                },
                                                "GivenName": {
                                                    "description": "The given name of the user.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Id": {
                                                    "description": "The ID of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Locale": {
                                                    "description": "The locale of the user.",
                                                    "enum": [
                                                        "en",
                                                        "fr",
                                                        "ko",
                                                        "de",
                                                        "es",
                                                        "ja",
                                                        "ru",
                                                        "zh_CN",
                                                        "zh_TW",
                                                        "pt_BR",
                                                        "default"
                                                    ],
                                                    "type": "string"
                                                },
                                                "ModifiedTimestamp": {
                                                    "description": "The time when the user was modified.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "OrganizationId": {
                                                    "description": "The ID of the organization.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "RecycleBinFolderId": {
                                                    "description": "The ID of the recycle bin folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "RootFolderId": {
                                                    "description": "The ID of the root folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the user.",
                                                    "enum": [
                                                        "ACTIVE",
                                                        "INACTIVE",
                                                        "PENDING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Storage": {
                                                    "description": "The storage for the user.",
                                                    "properties": {
                                                        "StorageRule": {
                                                            "description": "The storage for a user.",
                                                            "properties": {
                                                                "StorageAllocatedInBytes": {
                                                                    "description": "The amount of storage allocated, in bytes.",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "StorageType": {
                                                                    "description": "The type of storage.",
                                                                    "enum": [
                                                                        "UNLIMITED",
                                                                        "QUOTA"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "StorageUtilizedInBytes": {
                                                            "description": "The amount of storage used, in bytes.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Surname": {
                                                    "description": "The surname of the user.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "TimeZoneId": {
                                                    "description": "The time zone ID of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type of user.",
                                                    "enum": [
                                                        "USER",
                                                        "ADMIN",
                                                        "POWERUSER",
                                                        "MINIMALUSER",
                                                        "WORKSPACESUSER"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Username": {
                                                    "description": "The login name of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EntityNotExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnauthorizedOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnauthorizedResourceAccessException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FailedDependencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AbortDocumentVersionUploadRequest": {
                "properties": {},
                "type": "object"
            },
            "ActivateUserRequest": {
                "properties": {},
                "type": "object"
            },
            "ActivateUserResponse": {
                "properties": {
                    "User": {
                        "description": "The user information.",
                        "properties": {
                            "CreatedTimestamp": {
                                "description": "The time when the user was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "EmailAddress": {
                                "description": "The email address of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                "type": "string"
                            },
                            "GivenName": {
                                "description": "The given name of the user.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Id": {
                                "description": "The ID of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Locale": {
                                "description": "The locale of the user.",
                                "enum": [
                                    "en",
                                    "fr",
                                    "ko",
                                    "de",
                                    "es",
                                    "ja",
                                    "ru",
                                    "zh_CN",
                                    "zh_TW",
                                    "pt_BR",
                                    "default"
                                ],
                                "type": "string"
                            },
                            "ModifiedTimestamp": {
                                "description": "The time when the user was modified.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "OrganizationId": {
                                "description": "The ID of the organization.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "RecycleBinFolderId": {
                                "description": "The ID of the recycle bin folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "RootFolderId": {
                                "description": "The ID of the root folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the user.",
                                "enum": [
                                    "ACTIVE",
                                    "INACTIVE",
                                    "PENDING"
                                ],
                                "type": "string"
                            },
                            "Storage": {
                                "description": "The storage for the user.",
                                "properties": {
                                    "StorageRule": {
                                        "description": "The storage for a user.",
                                        "properties": {
                                            "StorageAllocatedInBytes": {
                                                "description": "The amount of storage allocated, in bytes.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "StorageType": {
                                                "description": "The type of storage.",
                                                "enum": [
                                                    "UNLIMITED",
                                                    "QUOTA"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "StorageUtilizedInBytes": {
                                        "description": "The amount of storage used, in bytes.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "Surname": {
                                "description": "The surname of the user.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "TimeZoneId": {
                                "description": "The time zone ID of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Type": {
                                "description": "The type of user.",
                                "enum": [
                                    "USER",
                                    "ADMIN",
                                    "POWERUSER",
                                    "MINIMALUSER",
                                    "WORKSPACESUSER"
                                ],
                                "type": "string"
                            },
                            "Username": {
                                "description": "The login name of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Activity": {
                "description": "Describes the activity information.",
                "properties": {
                    "CommentMetadata": {
                        "description": "Metadata of the commenting activity. This is an optional field and is filled for commenting activities.",
                        "properties": {
                            "CommentId": {
                                "description": "The ID of the comment.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "CommentStatus": {
                                "description": "The status of the comment.",
                                "enum": [
                                    "DRAFT",
                                    "PUBLISHED",
                                    "DELETED"
                                ],
                                "type": "string"
                            },
                            "Contributor": {
                                "description": "The user who made the comment.",
                                "properties": {
                                    "CreatedTimestamp": {
                                        "description": "The time when the user was created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "EmailAddress": {
                                        "description": "The email address of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                        "type": "string"
                                    },
                                    "GivenName": {
                                        "description": "The given name of the user.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The ID of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[&\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "Locale": {
                                        "description": "The locale of the user.",
                                        "enum": [
                                            "en",
                                            "fr",
                                            "ko",
                                            "de",
                                            "es",
                                            "ja",
                                            "ru",
                                            "zh_CN",
                                            "zh_TW",
                                            "pt_BR",
                                            "default"
                                        ],
                                        "type": "string"
                                    },
                                    "ModifiedTimestamp": {
                                        "description": "The time when the user was modified.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "OrganizationId": {
                                        "description": "The ID of the organization.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[&\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "RecycleBinFolderId": {
                                        "description": "The ID of the recycle bin folder.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "RootFolderId": {
                                        "description": "The ID of the root folder.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of the user.",
                                        "enum": [
                                            "ACTIVE",
                                            "INACTIVE",
                                            "PENDING"
                                        ],
                                        "type": "string"
                                    },
                                    "Storage": {
                                        "description": "The storage for the user.",
                                        "properties": {
                                            "StorageRule": {
                                                "description": "The storage for a user.",
                                                "properties": {
                                                    "StorageAllocatedInBytes": {
                                                        "description": "The amount of storage allocated, in bytes.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "StorageType": {
                                                        "description": "The type of storage.",
                                                        "enum": [
                                                            "UNLIMITED",
                                                            "QUOTA"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "StorageUtilizedInBytes": {
                                                "description": "The amount of storage used, in bytes.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Surname": {
                                        "description": "The surname of the user.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "TimeZoneId": {
                                        "description": "The time zone ID of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The type of user.",
                                        "enum": [
                                            "USER",
                                            "ADMIN",
                                            "POWERUSER",
                                            "MINIMALUSER",
                                            "WORKSPACESUSER"
                                        ],
                                        "type": "string"
                                    },
                                    "Username": {
                                        "description": "The login name of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "CreatedTimestamp": {
                                "description": "The timestamp that the comment was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "RecipientId": {
                                "description": "The ID of the user being replied to.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Initiator": {
                        "description": "The user who performed the action.",
                        "properties": {
                            "EmailAddress": {
                                "description": "The email address of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                "type": "string"
                            },
                            "GivenName": {
                                "description": "The given name of the user before a rename operation.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Id": {
                                "description": "The ID of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Surname": {
                                "description": "The surname of the user.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Username": {
                                "description": "The name of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "IsIndirectActivity": {
                        "description": "Indicates whether an activity is indirect or direct. An indirect activity results from a direct activity performed on a parent resource. For example, sharing a parent folder (the direct activity) shares all of the subfolders and documents within the parent folder (the indirect activity).",
                        "type": "boolean"
                    },
                    "OrganizationId": {
                        "description": "The ID of the organization.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "OriginalParent": {
                        "description": "The original parent of the resource. This is an optional field and is filled for move activities.",
                        "properties": {
                            "Id": {
                                "description": "The ID of the resource.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the resource.",
                                "maxLength": 255,
                                "minLength": 1,
                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                "type": "string"
                            },
                            "OriginalName": {
                                "description": "The original name of the resource before a rename operation.",
                                "maxLength": 255,
                                "minLength": 1,
                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                "type": "string"
                            },
                            "Owner": {
                                "description": "The owner of the resource.",
                                "properties": {
                                    "EmailAddress": {
                                        "description": "The email address of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                        "type": "string"
                                    },
                                    "GivenName": {
                                        "description": "The given name of the user before a rename operation.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The ID of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[&\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "Surname": {
                                        "description": "The surname of the user.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Username": {
                                        "description": "The name of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ParentId": {
                                "description": "The parent ID of the resource before a rename operation.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Type": {
                                "description": "The type of resource.",
                                "enum": [
                                    "FOLDER",
                                    "DOCUMENT"
                                ],
                                "type": "string"
                            },
                            "VersionId": {
                                "description": "The version ID of the resource. This is an optional field and is filled for action on document version.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Participants": {
                        "description": "The list of users or groups impacted by this action. This is an optional field and is filled for the following sharing activities: DOCUMENT_SHARED, DOCUMENT_SHARED, DOCUMENT_UNSHARED, FOLDER_SHARED, FOLDER_UNSHARED.",
                        "properties": {
                            "Groups": {
                                "description": "The list of user groups.",
                                "items": {
                                    "description": "Describes the metadata of a user group.",
                                    "properties": {
                                        "Id": {
                                            "description": "The ID of the user group.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "Users": {
                                "description": "The list of users.",
                                "items": {
                                    "description": "Describes the metadata of the user.",
                                    "properties": {
                                        "EmailAddress": {
                                            "description": "The email address of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                            "type": "string"
                                        },
                                        "GivenName": {
                                            "description": "The given name of the user before a rename operation.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The ID of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Surname": {
                                            "description": "The surname of the user.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Username": {
                                            "description": "The name of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "ResourceMetadata": {
                        "description": "The metadata of the resource involved in the user action.",
                        "properties": {
                            "Id": {
                                "description": "The ID of the resource.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the resource.",
                                "maxLength": 255,
                                "minLength": 1,
                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                "type": "string"
                            },
                            "OriginalName": {
                                "description": "The original name of the resource before a rename operation.",
                                "maxLength": 255,
                                "minLength": 1,
                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                "type": "string"
                            },
                            "Owner": {
                                "description": "The owner of the resource.",
                                "properties": {
                                    "EmailAddress": {
                                        "description": "The email address of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                        "type": "string"
                                    },
                                    "GivenName": {
                                        "description": "The given name of the user before a rename operation.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The ID of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[&\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "Surname": {
                                        "description": "The surname of the user.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Username": {
                                        "description": "The name of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ParentId": {
                                "description": "The parent ID of the resource before a rename operation.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Type": {
                                "description": "The type of resource.",
                                "enum": [
                                    "FOLDER",
                                    "DOCUMENT"
                                ],
                                "type": "string"
                            },
                            "VersionId": {
                                "description": "The version ID of the resource. This is an optional field and is filled for action on document version.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "TimeStamp": {
                        "description": "The timestamp when the action was performed.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Type": {
                        "description": "The activity type.",
                        "enum": [
                            "DOCUMENT_CHECKED_IN",
                            "DOCUMENT_CHECKED_OUT",
                            "DOCUMENT_RENAMED",
                            "DOCUMENT_VERSION_UPLOADED",
                            "DOCUMENT_VERSION_DELETED",
                            "DOCUMENT_VERSION_VIEWED",
                            "DOCUMENT_VERSION_DOWNLOADED",
                            "DOCUMENT_RECYCLED",
                            "DOCUMENT_RESTORED",
                            "DOCUMENT_REVERTED",
                            "DOCUMENT_SHARED",
                            "DOCUMENT_UNSHARED",
                            "DOCUMENT_SHARE_PERMISSION_CHANGED",
                            "DOCUMENT_SHAREABLE_LINK_CREATED",
                            "DOCUMENT_SHAREABLE_LINK_REMOVED",
                            "DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED",
                            "DOCUMENT_MOVED",
                            "DOCUMENT_COMMENT_ADDED",
                            "DOCUMENT_COMMENT_DELETED",
                            "DOCUMENT_ANNOTATION_ADDED",
                            "DOCUMENT_ANNOTATION_DELETED",
                            "FOLDER_CREATED",
                            "FOLDER_DELETED",
                            "FOLDER_RENAMED",
                            "FOLDER_RECYCLED",
                            "FOLDER_RESTORED",
                            "FOLDER_SHARED",
                            "FOLDER_UNSHARED",
                            "FOLDER_SHARE_PERMISSION_CHANGED",
                            "FOLDER_SHAREABLE_LINK_CREATED",
                            "FOLDER_SHAREABLE_LINK_REMOVED",
                            "FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED",
                            "FOLDER_MOVED"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityNamesFilterType": {
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "[\\w,]+",
                "type": "string"
            },
            "ActivityType": {
                "enum": [
                    "DOCUMENT_CHECKED_IN",
                    "DOCUMENT_CHECKED_OUT",
                    "DOCUMENT_RENAMED",
                    "DOCUMENT_VERSION_UPLOADED",
                    "DOCUMENT_VERSION_DELETED",
                    "DOCUMENT_VERSION_VIEWED",
                    "DOCUMENT_VERSION_DOWNLOADED",
                    "DOCUMENT_RECYCLED",
                    "DOCUMENT_RESTORED",
                    "DOCUMENT_REVERTED",
                    "DOCUMENT_SHARED",
                    "DOCUMENT_UNSHARED",
                    "DOCUMENT_SHARE_PERMISSION_CHANGED",
                    "DOCUMENT_SHAREABLE_LINK_CREATED",
                    "DOCUMENT_SHAREABLE_LINK_REMOVED",
                    "DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED",
                    "DOCUMENT_MOVED",
                    "DOCUMENT_COMMENT_ADDED",
                    "DOCUMENT_COMMENT_DELETED",
                    "DOCUMENT_ANNOTATION_ADDED",
                    "DOCUMENT_ANNOTATION_DELETED",
                    "FOLDER_CREATED",
                    "FOLDER_DELETED",
                    "FOLDER_RENAMED",
                    "FOLDER_RECYCLED",
                    "FOLDER_RESTORED",
                    "FOLDER_SHARED",
                    "FOLDER_UNSHARED",
                    "FOLDER_SHARE_PERMISSION_CHANGED",
                    "FOLDER_SHAREABLE_LINK_CREATED",
                    "FOLDER_SHAREABLE_LINK_REMOVED",
                    "FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED",
                    "FOLDER_MOVED"
                ],
                "type": "string"
            },
            "AddResourcePermissionsRequest": {
                "properties": {
                    "NotificationOptions": {
                        "description": "The notification options.",
                        "properties": {
                            "EmailMessage": {
                                "description": "Text value to be included in the email body.",
                                "format": "password",
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            },
                            "SendEmail": {
                                "description": "Boolean value to indicate an email notification should be sent to the receipients.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "Principals": {
                        "description": "The users, groups, or organization being granted permission.",
                        "items": {
                            "description": "Describes the recipient type and ID, if available.",
                            "properties": {
                                "Id": {
                                    "description": "The ID of the recipient.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Role": {
                                    "description": "The role of the recipient.",
                                    "enum": [
                                        "VIEWER",
                                        "CONTRIBUTOR",
                                        "OWNER",
                                        "COOWNER"
                                    ],
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of the recipient.",
                                    "enum": [
                                        "USER",
                                        "GROUP",
                                        "INVITE",
                                        "ANONYMOUS",
                                        "ORGANIZATION"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Id",
                                "Type",
                                "Role"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Principals"
                ],
                "type": "object"
            },
            "AddResourcePermissionsResponse": {
                "properties": {
                    "ShareResults": {
                        "description": "The share results.",
                        "items": {
                            "description": "Describes the share results of a resource.",
                            "properties": {
                                "InviteePrincipalId": {
                                    "description": "The ID of the invited user.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "PrincipalId": {
                                    "description": "The ID of the principal.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Role": {
                                    "description": "The role.",
                                    "enum": [
                                        "VIEWER",
                                        "CONTRIBUTOR",
                                        "OWNER",
                                        "COOWNER"
                                    ],
                                    "type": "string"
                                },
                                "ShareId": {
                                    "description": "The ID of the resource that was shared.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status.",
                                    "enum": [
                                        "SUCCESS",
                                        "FAILURE"
                                    ],
                                    "type": "string"
                                },
                                "StatusMessage": {
                                    "description": "The status message.",
                                    "format": "password",
                                    "maxLength": 2048,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AuthenticationHeaderType": {
                "format": "password",
                "maxLength": 8199,
                "minLength": 1,
                "type": "string"
            },
            "BooleanEnumType": {
                "enum": [
                    "TRUE",
                    "FALSE"
                ],
                "type": "string"
            },
            "BooleanType": {
                "type": "boolean"
            },
            "Comment": {
                "description": "Describes a comment.",
                "properties": {
                    "CommentId": {
                        "description": "The ID of the comment.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "Contributor": {
                        "description": "The details of the user who made the comment.",
                        "properties": {
                            "CreatedTimestamp": {
                                "description": "The time when the user was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "EmailAddress": {
                                "description": "The email address of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                "type": "string"
                            },
                            "GivenName": {
                                "description": "The given name of the user.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Id": {
                                "description": "The ID of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Locale": {
                                "description": "The locale of the user.",
                                "enum": [
                                    "en",
                                    "fr",
                                    "ko",
                                    "de",
                                    "es",
                                    "ja",
                                    "ru",
                                    "zh_CN",
                                    "zh_TW",
                                    "pt_BR",
                                    "default"
                                ],
                                "type": "string"
                            },
                            "ModifiedTimestamp": {
                                "description": "The time when the user was modified.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "OrganizationId": {
                                "description": "The ID of the organization.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "RecycleBinFolderId": {
                                "description": "The ID of the recycle bin folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "RootFolderId": {
                                "description": "The ID of the root folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the user.",
                                "enum": [
                                    "ACTIVE",
                                    "INACTIVE",
                                    "PENDING"
                                ],
                                "type": "string"
                            },
                            "Storage": {
                                "description": "The storage for the user.",
                                "properties": {
                                    "StorageRule": {
                                        "description": "The storage for a user.",
                                        "properties": {
                                            "StorageAllocatedInBytes": {
                                                "description": "The amount of storage allocated, in bytes.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "StorageType": {
                                                "description": "The type of storage.",
                                                "enum": [
                                                    "UNLIMITED",
                                                    "QUOTA"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "StorageUtilizedInBytes": {
                                        "description": "The amount of storage used, in bytes.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "Surname": {
                                "description": "The surname of the user.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "TimeZoneId": {
                                "description": "The time zone ID of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Type": {
                                "description": "The type of user.",
                                "enum": [
                                    "USER",
                                    "ADMIN",
                                    "POWERUSER",
                                    "MINIMALUSER",
                                    "WORKSPACESUSER"
                                ],
                                "type": "string"
                            },
                            "Username": {
                                "description": "The login name of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "CreatedTimestamp": {
                        "description": "The time that the comment was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ParentId": {
                        "description": "The ID of the parent comment.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "RecipientId": {
                        "description": "If the comment is a reply to another user's comment, this field contains the user ID of the user being replied to.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the comment.",
                        "enum": [
                            "DRAFT",
                            "PUBLISHED",
                            "DELETED"
                        ],
                        "type": "string"
                    },
                    "Text": {
                        "description": "The text of the comment.",
                        "format": "password",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ThreadId": {
                        "description": "The ID of the root comment in the thread.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "Visibility": {
                        "description": "The visibility of the comment. Options are either PRIVATE, where the comment is visible only to the comment author and document owner and co-owners, or PUBLIC, where the comment is visible to document owners, co-owners, and contributors.",
                        "enum": [
                            "PUBLIC",
                            "PRIVATE"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "CommentId"
                ],
                "type": "object"
            },
            "CommentIdType": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "[\\w+-.@]+",
                "type": "string"
            },
            "CommentList": {
                "items": {
                    "description": "Describes a comment.",
                    "properties": {
                        "CommentId": {
                            "description": "The ID of the comment.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[\\w+-.@]+",
                            "type": "string"
                        },
                        "Contributor": {
                            "description": "The details of the user who made the comment.",
                            "properties": {
                                "CreatedTimestamp": {
                                    "description": "The time when the user was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "EmailAddress": {
                                    "description": "The email address of the user.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                    "type": "string"
                                },
                                "GivenName": {
                                    "description": "The given name of the user.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The ID of the user.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Locale": {
                                    "description": "The locale of the user.",
                                    "enum": [
                                        "en",
                                        "fr",
                                        "ko",
                                        "de",
                                        "es",
                                        "ja",
                                        "ru",
                                        "zh_CN",
                                        "zh_TW",
                                        "pt_BR",
                                        "default"
                                    ],
                                    "type": "string"
                                },
                                "ModifiedTimestamp": {
                                    "description": "The time when the user was modified.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "OrganizationId": {
                                    "description": "The ID of the organization.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "RecycleBinFolderId": {
                                    "description": "The ID of the recycle bin folder.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "RootFolderId": {
                                    "description": "The ID of the root folder.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the user.",
                                    "enum": [
                                        "ACTIVE",
                                        "INACTIVE",
                                        "PENDING"
                                    ],
                                    "type": "string"
                                },
                                "Storage": {
                                    "description": "The storage for the user.",
                                    "properties": {
                                        "StorageRule": {
                                            "description": "The storage for a user.",
                                            "properties": {
                                                "StorageAllocatedInBytes": {
                                                    "description": "The amount of storage allocated, in bytes.",
                                                    "minimum": 0,
                                                    "type": "integer"
                                                },
                                                "StorageType": {
                                                    "description": "The type of storage.",
                                                    "enum": [
                                                        "UNLIMITED",
                                                        "QUOTA"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "StorageUtilizedInBytes": {
                                            "description": "The amount of storage used, in bytes.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Surname": {
                                    "description": "The surname of the user.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "TimeZoneId": {
                                    "description": "The time zone ID of the user.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of user.",
                                    "enum": [
                                        "USER",
                                        "ADMIN",
                                        "POWERUSER",
                                        "MINIMALUSER",
                                        "WORKSPACESUSER"
                                    ],
                                    "type": "string"
                                },
                                "Username": {
                                    "description": "The login name of the user.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "CreatedTimestamp": {
                            "description": "The time that the comment was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ParentId": {
                            "description": "The ID of the parent comment.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[\\w+-.@]+",
                            "type": "string"
                        },
                        "RecipientId": {
                            "description": "If the comment is a reply to another user's comment, this field contains the user ID of the user being replied to.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the comment.",
                            "enum": [
                                "DRAFT",
                                "PUBLISHED",
                                "DELETED"
                            ],
                            "type": "string"
                        },
                        "Text": {
                            "description": "The text of the comment.",
                            "format": "password",
                            "maxLength": 2048,
                            "minLength": 1,
                            "type": "string"
                        },
                        "ThreadId": {
                            "description": "The ID of the root comment in the thread.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[\\w+-.@]+",
                            "type": "string"
                        },
                        "Visibility": {
                            "description": "The visibility of the comment. Options are either PRIVATE, where the comment is visible only to the comment author and document owner and co-owners, or PUBLIC, where the comment is visible to document owners, co-owners, and contributors.",
                            "enum": [
                                "PUBLIC",
                                "PRIVATE"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "CommentId"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "CommentMetadata": {
                "description": "Describes the metadata of a comment.",
                "properties": {
                    "CommentId": {
                        "description": "The ID of the comment.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "CommentStatus": {
                        "description": "The status of the comment.",
                        "enum": [
                            "DRAFT",
                            "PUBLISHED",
                            "DELETED"
                        ],
                        "type": "string"
                    },
                    "Contributor": {
                        "description": "The user who made the comment.",
                        "properties": {
                            "CreatedTimestamp": {
                                "description": "The time when the user was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "EmailAddress": {
                                "description": "The email address of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                "type": "string"
                            },
                            "GivenName": {
                                "description": "The given name of the user.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Id": {
                                "description": "The ID of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Locale": {
                                "description": "The locale of the user.",
                                "enum": [
                                    "en",
                                    "fr",
                                    "ko",
                                    "de",
                                    "es",
                                    "ja",
                                    "ru",
                                    "zh_CN",
                                    "zh_TW",
                                    "pt_BR",
                                    "default"
                                ],
                                "type": "string"
                            },
                            "ModifiedTimestamp": {
                                "description": "The time when the user was modified.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "OrganizationId": {
                                "description": "The ID of the organization.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "RecycleBinFolderId": {
                                "description": "The ID of the recycle bin folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "RootFolderId": {
                                "description": "The ID of the root folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the user.",
                                "enum": [
                                    "ACTIVE",
                                    "INACTIVE",
                                    "PENDING"
                                ],
                                "type": "string"
                            },
                            "Storage": {
                                "description": "The storage for the user.",
                                "properties": {
                                    "StorageRule": {
                                        "description": "The storage for a user.",
                                        "properties": {
                                            "StorageAllocatedInBytes": {
                                                "description": "The amount of storage allocated, in bytes.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "StorageType": {
                                                "description": "The type of storage.",
                                                "enum": [
                                                    "UNLIMITED",
                                                    "QUOTA"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "StorageUtilizedInBytes": {
                                        "description": "The amount of storage used, in bytes.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "Surname": {
                                "description": "The surname of the user.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "TimeZoneId": {
                                "description": "The time zone ID of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Type": {
                                "description": "The type of user.",
                                "enum": [
                                    "USER",
                                    "ADMIN",
                                    "POWERUSER",
                                    "MINIMALUSER",
                                    "WORKSPACESUSER"
                                ],
                                "type": "string"
                            },
                            "Username": {
                                "description": "The login name of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "CreatedTimestamp": {
                        "description": "The timestamp that the comment was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "RecipientId": {
                        "description": "The ID of the user being replied to.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CommentStatusType": {
                "enum": [
                    "DRAFT",
                    "PUBLISHED",
                    "DELETED"
                ],
                "type": "string"
            },
            "CommentTextType": {
                "format": "password",
                "maxLength": 2048,
                "minLength": 1,
                "type": "string"
            },
            "CommentVisibilityType": {
                "enum": [
                    "PUBLIC",
                    "PRIVATE"
                ],
                "type": "string"
            },
            "ConcurrentModificationException": {},
            "ConflictingOperationException": {},
            "CreateCommentRequest": {
                "properties": {
                    "NotifyCollaborators": {
                        "description": "Set this parameter to TRUE to send an email out to the document collaborators after the comment is created.",
                        "type": "boolean"
                    },
                    "ParentId": {
                        "description": "The ID of the parent comment.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "Text": {
                        "description": "The text of the comment.",
                        "format": "password",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ThreadId": {
                        "description": "The ID of the root comment in the thread.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "Visibility": {
                        "description": "The visibility of the comment. Options are either PRIVATE, where the comment is visible only to the comment author and document owner and co-owners, or PUBLIC, where the comment is visible to document owners, co-owners, and contributors.",
                        "enum": [
                            "PUBLIC",
                            "PRIVATE"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "Text"
                ],
                "type": "object"
            },
            "CreateCommentResponse": {
                "properties": {
                    "Comment": {
                        "description": "The comment that has been created.",
                        "properties": {
                            "CommentId": {
                                "description": "The ID of the comment.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Contributor": {
                                "description": "The details of the user who made the comment.",
                                "properties": {
                                    "CreatedTimestamp": {
                                        "description": "The time when the user was created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "EmailAddress": {
                                        "description": "The email address of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                        "type": "string"
                                    },
                                    "GivenName": {
                                        "description": "The given name of the user.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The ID of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[&\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "Locale": {
                                        "description": "The locale of the user.",
                                        "enum": [
                                            "en",
                                            "fr",
                                            "ko",
                                            "de",
                                            "es",
                                            "ja",
                                            "ru",
                                            "zh_CN",
                                            "zh_TW",
                                            "pt_BR",
                                            "default"
                                        ],
                                        "type": "string"
                                    },
                                    "ModifiedTimestamp": {
                                        "description": "The time when the user was modified.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "OrganizationId": {
                                        "description": "The ID of the organization.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[&\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "RecycleBinFolderId": {
                                        "description": "The ID of the recycle bin folder.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "RootFolderId": {
                                        "description": "The ID of the root folder.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of the user.",
                                        "enum": [
                                            "ACTIVE",
                                            "INACTIVE",
                                            "PENDING"
                                        ],
                                        "type": "string"
                                    },
                                    "Storage": {
                                        "description": "The storage for the user.",
                                        "properties": {
                                            "StorageRule": {
                                                "description": "The storage for a user.",
                                                "properties": {
                                                    "StorageAllocatedInBytes": {
                                                        "description": "The amount of storage allocated, in bytes.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "StorageType": {
                                                        "description": "The type of storage.",
                                                        "enum": [
                                                            "UNLIMITED",
                                                            "QUOTA"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "StorageUtilizedInBytes": {
                                                "description": "The amount of storage used, in bytes.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Surname": {
                                        "description": "The surname of the user.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "TimeZoneId": {
                                        "description": "The time zone ID of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The type of user.",
                                        "enum": [
                                            "USER",
                                            "ADMIN",
                                            "POWERUSER",
                                            "MINIMALUSER",
                                            "WORKSPACESUSER"
                                        ],
                                        "type": "string"
                                    },
                                    "Username": {
                                        "description": "The login name of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "CreatedTimestamp": {
                                "description": "The time that the comment was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ParentId": {
                                "description": "The ID of the parent comment.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "RecipientId": {
                                "description": "If the comment is a reply to another user's comment, this field contains the user ID of the user being replied to.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the comment.",
                                "enum": [
                                    "DRAFT",
                                    "PUBLISHED",
                                    "DELETED"
                                ],
                                "type": "string"
                            },
                            "Text": {
                                "description": "The text of the comment.",
                                "format": "password",
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string"
                            },
                            "ThreadId": {
                                "description": "The ID of the root comment in the thread.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Visibility": {
                                "description": "The visibility of the comment. Options are either PRIVATE, where the comment is visible only to the comment author and document owner and co-owners, or PUBLIC, where the comment is visible to document owners, co-owners, and contributors.",
                                "enum": [
                                    "PUBLIC",
                                    "PRIVATE"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "CommentId"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateCustomMetadataRequest": {
                "properties": {
                    "CustomMetadata": {
                        "description": "Custom metadata in the form of name-value pairs.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 56,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 8,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "CustomMetadata"
                ],
                "type": "object"
            },
            "CreateCustomMetadataResponse": {
                "properties": {},
                "type": "object"
            },
            "CreateFolderRequest": {
                "properties": {
                    "Name": {
                        "description": "The name of the new folder.",
                        "maxLength": 255,
                        "minLength": 1,
                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                        "type": "string"
                    },
                    "ParentFolderId": {
                        "description": "The ID of the parent folder.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    }
                },
                "required": [
                    "ParentFolderId"
                ],
                "type": "object"
            },
            "CreateFolderResponse": {
                "properties": {
                    "Metadata": {
                        "description": "The metadata of the folder.",
                        "properties": {
                            "CreatedTimestamp": {
                                "description": "The time when the folder was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "CreatorId": {
                                "description": "The ID of the creator.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Id": {
                                "description": "The ID of the folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Labels": {
                                "description": "List of labels on the folder.",
                                "items": {
                                    "maxLength": 32,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                    "type": "string"
                                },
                                "maxItems": 20,
                                "type": "array"
                            },
                            "LatestVersionSize": {
                                "description": "The size of the latest version of the folder metadata.",
                                "type": "integer"
                            },
                            "ModifiedTimestamp": {
                                "description": "The time when the folder was updated.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the folder.",
                                "maxLength": 255,
                                "minLength": 1,
                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                "type": "string"
                            },
                            "ParentFolderId": {
                                "description": "The ID of the parent folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "ResourceState": {
                                "description": "The resource state of the folder.",
                                "enum": [
                                    "ACTIVE",
                                    "RESTORING",
                                    "RECYCLING",
                                    "RECYCLED"
                                ],
                                "type": "string"
                            },
                            "Signature": {
                                "description": "The unique identifier created from the subfolders and documents of the folder.",
                                "maxLength": 128,
                                "minLength": 0,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Size": {
                                "description": "The size of the folder metadata.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateLabelsRequest": {
                "properties": {
                    "Labels": {
                        "description": "List of labels to add to the resource.",
                        "items": {
                            "maxLength": 32,
                            "minLength": 1,
                            "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                            "type": "string"
                        },
                        "maxItems": 20,
                        "type": "array"
                    }
                },
                "required": [
                    "Labels"
                ],
                "type": "object"
            },
            "CreateLabelsResponse": {
                "properties": {},
                "type": "object"
            },
            "CreateNotificationSubscriptionRequest": {
                "properties": {
                    "Endpoint": {
                        "description": "The endpoint to receive the notifications. If the protocol is HTTPS, the endpoint is a URL that begins with <code>https</code>.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Protocol": {
                        "description": "The protocol to use. The supported value is https, which delivers JSON-encoded messages using HTTPS POST.",
                        "enum": [
                            "HTTPS"
                        ],
                        "type": "string"
                    },
                    "SubscriptionType": {
                        "description": "The notification type.",
                        "enum": [
                            "ALL"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "Endpoint",
                    "Protocol",
                    "SubscriptionType"
                ],
                "type": "object"
            },
            "CreateNotificationSubscriptionResponse": {
                "properties": {
                    "Subscription": {
                        "description": "The subscription.",
                        "properties": {
                            "EndPoint": {
                                "description": "The endpoint of the subscription.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Protocol": {
                                "description": "The protocol of the subscription.",
                                "enum": [
                                    "HTTPS"
                                ],
                                "type": "string"
                            },
                            "SubscriptionId": {
                                "description": "The ID of the subscription.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateUserRequest": {
                "properties": {
                    "EmailAddress": {
                        "description": "The email address of the user.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                        "type": "string"
                    },
                    "GivenName": {
                        "description": "The given name of the user.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "OrganizationId": {
                        "description": "The ID of the organization.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "Password": {
                        "description": "The password of the user.",
                        "format": "password",
                        "maxLength": 32,
                        "minLength": 4,
                        "pattern": "[\\u0020-\\u00FF]+",
                        "type": "string"
                    },
                    "StorageRule": {
                        "description": "The amount of storage for the user.",
                        "properties": {
                            "StorageAllocatedInBytes": {
                                "description": "The amount of storage allocated, in bytes.",
                                "minimum": 0,
                                "type": "integer"
                            },
                            "StorageType": {
                                "description": "The type of storage.",
                                "enum": [
                                    "UNLIMITED",
                                    "QUOTA"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Surname": {
                        "description": "The surname of the user.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TimeZoneId": {
                        "description": "The time zone ID of the user.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Username": {
                        "description": "The login name of the user.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                        "type": "string"
                    }
                },
                "required": [
                    "Username",
                    "GivenName",
                    "Surname",
                    "Password"
                ],
                "type": "object"
            },
            "CreateUserResponse": {
                "properties": {
                    "User": {
                        "description": "The user information.",
                        "properties": {
                            "CreatedTimestamp": {
                                "description": "The time when the user was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "EmailAddress": {
                                "description": "The email address of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                "type": "string"
                            },
                            "GivenName": {
                                "description": "The given name of the user.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Id": {
                                "description": "The ID of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Locale": {
                                "description": "The locale of the user.",
                                "enum": [
                                    "en",
                                    "fr",
                                    "ko",
                                    "de",
                                    "es",
                                    "ja",
                                    "ru",
                                    "zh_CN",
                                    "zh_TW",
                                    "pt_BR",
                                    "default"
                                ],
                                "type": "string"
                            },
                            "ModifiedTimestamp": {
                                "description": "The time when the user was modified.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "OrganizationId": {
                                "description": "The ID of the organization.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "RecycleBinFolderId": {
                                "description": "The ID of the recycle bin folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "RootFolderId": {
                                "description": "The ID of the root folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the user.",
                                "enum": [
                                    "ACTIVE",
                                    "INACTIVE",
                                    "PENDING"
                                ],
                                "type": "string"
                            },
                            "Storage": {
                                "description": "The storage for the user.",
                                "properties": {
                                    "StorageRule": {
                                        "description": "The storage for a user.",
                                        "properties": {
                                            "StorageAllocatedInBytes": {
                                                "description": "The amount of storage allocated, in bytes.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "StorageType": {
                                                "description": "The type of storage.",
                                                "enum": [
                                                    "UNLIMITED",
                                                    "QUOTA"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "StorageUtilizedInBytes": {
                                        "description": "The amount of storage used, in bytes.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "Surname": {
                                "description": "The surname of the user.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "TimeZoneId": {
                                "description": "The time zone ID of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Type": {
                                "description": "The type of user.",
                                "enum": [
                                    "USER",
                                    "ADMIN",
                                    "POWERUSER",
                                    "MINIMALUSER",
                                    "WORKSPACESUSER"
                                ],
                                "type": "string"
                            },
                            "Username": {
                                "description": "The login name of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CustomMetadataKeyList": {
                "items": {
                    "maxLength": 56,
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                    "type": "string"
                },
                "maxItems": 8,
                "type": "array"
            },
            "CustomMetadataKeyType": {
                "maxLength": 56,
                "minLength": 1,
                "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                "type": "string"
            },
            "CustomMetadataLimitExceededException": {},
            "CustomMetadataMap": {
                "items": {
                    "properties": {
                        "key": {
                            "maxLength": 56,
                            "minLength": 1,
                            "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                            "type": "string"
                        },
                        "value": {
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 8,
                "minItems": 1,
                "type": "array"
            },
            "CustomMetadataValueType": {
                "maxLength": 256,
                "minLength": 1,
                "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                "type": "string"
            },
            "DeactivateUserRequest": {
                "properties": {},
                "type": "object"
            },
            "DeactivatingLastSystemUserException": {},
            "DeleteCommentRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteCustomMetadataRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteCustomMetadataResponse": {
                "properties": {},
                "type": "object"
            },
            "DeleteDocumentRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteFolderContentsRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteFolderRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteLabelsRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteLabelsResponse": {
                "properties": {},
                "type": "object"
            },
            "DeleteNotificationSubscriptionRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteUserRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeActivitiesRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeActivitiesResponse": {
                "properties": {
                    "Marker": {
                        "description": "The marker for the next set of results.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "pattern": "[\\u0000-\\u00FF]+",
                        "type": "string"
                    },
                    "UserActivities": {
                        "description": "The list of activities for the specified user and time period.",
                        "items": {
                            "description": "Describes the activity information.",
                            "properties": {
                                "CommentMetadata": {
                                    "description": "Metadata of the commenting activity. This is an optional field and is filled for commenting activities.",
                                    "properties": {
                                        "CommentId": {
                                            "description": "The ID of the comment.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "[\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "CommentStatus": {
                                            "description": "The status of the comment.",
                                            "enum": [
                                                "DRAFT",
                                                "PUBLISHED",
                                                "DELETED"
                                            ],
                                            "type": "string"
                                        },
                                        "Contributor": {
                                            "description": "The user who made the comment.",
                                            "properties": {
                                                "CreatedTimestamp": {
                                                    "description": "The time when the user was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "EmailAddress": {
                                                    "description": "The email address of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                    "type": "string"
                                                },
                                                "GivenName": {
                                                    "description": "The given name of the user.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Id": {
                                                    "description": "The ID of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Locale": {
                                                    "description": "The locale of the user.",
                                                    "enum": [
                                                        "en",
                                                        "fr",
                                                        "ko",
                                                        "de",
                                                        "es",
                                                        "ja",
                                                        "ru",
                                                        "zh_CN",
                                                        "zh_TW",
                                                        "pt_BR",
                                                        "default"
                                                    ],
                                                    "type": "string"
                                                },
                                                "ModifiedTimestamp": {
                                                    "description": "The time when the user was modified.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "OrganizationId": {
                                                    "description": "The ID of the organization.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "RecycleBinFolderId": {
                                                    "description": "The ID of the recycle bin folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "RootFolderId": {
                                                    "description": "The ID of the root folder.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the user.",
                                                    "enum": [
                                                        "ACTIVE",
                                                        "INACTIVE",
                                                        "PENDING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Storage": {
                                                    "description": "The storage for the user.",
                                                    "properties": {
                                                        "StorageRule": {
                                                            "description": "The storage for a user.",
                                                            "properties": {
                                                                "StorageAllocatedInBytes": {
                                                                    "description": "The amount of storage allocated, in bytes.",
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                "StorageType": {
                                                                    "description": "The type of storage.",
                                                                    "enum": [
                                                                        "UNLIMITED",
                                                                        "QUOTA"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "StorageUtilizedInBytes": {
                                                            "description": "The amount of storage used, in bytes.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Surname": {
                                                    "description": "The surname of the user.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "TimeZoneId": {
                                                    "description": "The time zone ID of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type of user.",
                                                    "enum": [
                                                        "USER",
                                                        "ADMIN",
                                                        "POWERUSER",
                                                        "MINIMALUSER",
                                                        "WORKSPACESUSER"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Username": {
                                                    "description": "The login name of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "CreatedTimestamp": {
                                            "description": "The timestamp that the comment was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "RecipientId": {
                                            "description": "The ID of the user being replied to.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Initiator": {
                                    "description": "The user who performed the action.",
                                    "properties": {
                                        "EmailAddress": {
                                            "description": "The email address of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                            "type": "string"
                                        },
                                        "GivenName": {
                                            "description": "The given name of the user before a rename operation.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The ID of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Surname": {
                                            "description": "The surname of the user.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Username": {
                                            "description": "The name of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "IsIndirectActivity": {
                                    "description": "Indicates whether an activity is indirect or direct. An indirect activity results from a direct activity performed on a parent resource. For example, sharing a parent folder (the direct activity) shares all of the subfolders and documents within the parent folder (the indirect activity).",
                                    "type": "boolean"
                                },
                                "OrganizationId": {
                                    "description": "The ID of the organization.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "OriginalParent": {
                                    "description": "The original parent of the resource. This is an optional field and is filled for move activities.",
                                    "properties": {
                                        "Id": {
                                            "description": "The ID of the resource.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "[\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the resource.",
                                            "maxLength": 255,
                                            "minLength": 1,
                                            "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                            "type": "string"
                                        },
                                        "OriginalName": {
                                            "description": "The original name of the resource before a rename operation.",
                                            "maxLength": 255,
                                            "minLength": 1,
                                            "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                            "type": "string"
                                        },
                                        "Owner": {
                                            "description": "The owner of the resource.",
                                            "properties": {
                                                "EmailAddress": {
                                                    "description": "The email address of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                    "type": "string"
                                                },
                                                "GivenName": {
                                                    "description": "The given name of the user before a rename operation.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Id": {
                                                    "description": "The ID of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Surname": {
                                                    "description": "The surname of the user.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Username": {
                                                    "description": "The name of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "ParentId": {
                                            "description": "The parent ID of the resource before a rename operation.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "[\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Type": {
                                            "description": "The type of resource.",
                                            "enum": [
                                                "FOLDER",
                                                "DOCUMENT"
                                            ],
                                            "type": "string"
                                        },
                                        "VersionId": {
                                            "description": "The version ID of the resource. This is an optional field and is filled for action on document version.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "[\\w+-.@]+",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Participants": {
                                    "description": "The list of users or groups impacted by this action. This is an optional field and is filled for the following sharing activities: DOCUMENT_SHARED, DOCUMENT_SHARED, DOCUMENT_UNSHARED, FOLDER_SHARED, FOLDER_UNSHARED.",
                                    "properties": {
                                        "Groups": {
                                            "description": "The list of user groups.",
                                            "items": {
                                                "description": "Describes the metadata of a user group.",
                                                "properties": {
                                                    "Id": {
                                                        "description": "The ID of the user group.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the group.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Users": {
                                            "description": "The list of users.",
                                            "items": {
                                                "description": "Describes the metadata of the user.",
                                                "properties": {
                                                    "EmailAddress": {
                                                        "description": "The email address of the user.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                        "type": "string"
                                                    },
                                                    "GivenName": {
                                                        "description": "The given name of the user before a rename operation.",
                                                        "maxLength": 64,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The ID of the user.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[&\\w+-.@]+",
                                                        "type": "string"
                                                    },
                                                    "Surname": {
                                                        "description": "The surname of the user.",
                                                        "maxLength": 64,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Username": {
                                                        "description": "The name of the user.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ResourceMetadata": {
                                    "description": "The metadata of the resource involved in the user action.",
                                    "properties": {
                                        "Id": {
                                            "description": "The ID of the resource.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "[\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the resource.",
                                            "maxLength": 255,
                                            "minLength": 1,
                                            "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                            "type": "string"
                                        },
                                        "OriginalName": {
                                            "description": "The original name of the resource before a rename operation.",
                                            "maxLength": 255,
                                            "minLength": 1,
                                            "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                            "type": "string"
                                        },
                                        "Owner": {
                                            "description": "The owner of the resource.",
                                            "properties": {
                                                "EmailAddress": {
                                                    "description": "The email address of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                    "type": "string"
                                                },
                                                "GivenName": {
                                                    "description": "The given name of the user before a rename operation.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Id": {
                                                    "description": "The ID of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[&\\w+-.@]+",
                                                    "type": "string"
                                                },
                                                "Surname": {
                                                    "description": "The surname of the user.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Username": {
                                                    "description": "The name of the user.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "ParentId": {
                                            "description": "The parent ID of the resource before a rename operation.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "[\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Type": {
                                            "description": "The type of resource.",
                                            "enum": [
                                                "FOLDER",
                                                "DOCUMENT"
                                            ],
                                            "type": "string"
                                        },
                                        "VersionId": {
                                            "description": "The version ID of the resource. This is an optional field and is filled for action on document version.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "[\\w+-.@]+",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "TimeStamp": {
                                    "description": "The timestamp when the action was performed.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The activity type.",
                                    "enum": [
                                        "DOCUMENT_CHECKED_IN",
                                        "DOCUMENT_CHECKED_OUT",
                                        "DOCUMENT_RENAMED",
                                        "DOCUMENT_VERSION_UPLOADED",
                                        "DOCUMENT_VERSION_DELETED",
                                        "DOCUMENT_VERSION_VIEWED",
                                        "DOCUMENT_VERSION_DOWNLOADED",
                                        "DOCUMENT_RECYCLED",
                                        "DOCUMENT_RESTORED",
                                        "DOCUMENT_REVERTED",
                                        "DOCUMENT_SHARED",
                                        "DOCUMENT_UNSHARED",
                                        "DOCUMENT_SHARE_PERMISSION_CHANGED",
                                        "DOCUMENT_SHAREABLE_LINK_CREATED",
                                        "DOCUMENT_SHAREABLE_LINK_REMOVED",
                                        "DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED",
                                        "DOCUMENT_MOVED",
                                        "DOCUMENT_COMMENT_ADDED",
                                        "DOCUMENT_COMMENT_DELETED",
                                        "DOCUMENT_ANNOTATION_ADDED",
                                        "DOCUMENT_ANNOTATION_DELETED",
                                        "FOLDER_CREATED",
                                        "FOLDER_DELETED",
                                        "FOLDER_RENAMED",
                                        "FOLDER_RECYCLED",
                                        "FOLDER_RESTORED",
                                        "FOLDER_SHARED",
                                        "FOLDER_UNSHARED",
                                        "FOLDER_SHARE_PERMISSION_CHANGED",
                                        "FOLDER_SHAREABLE_LINK_CREATED",
                                        "FOLDER_SHAREABLE_LINK_REMOVED",
                                        "FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED",
                                        "FOLDER_MOVED"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeCommentsRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeCommentsResponse": {
                "properties": {
                    "Comments": {
                        "description": "The list of comments for the specified document version.",
                        "items": {
                            "description": "Describes a comment.",
                            "properties": {
                                "CommentId": {
                                    "description": "The ID of the comment.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "Contributor": {
                                    "description": "The details of the user who made the comment.",
                                    "properties": {
                                        "CreatedTimestamp": {
                                            "description": "The time when the user was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "EmailAddress": {
                                            "description": "The email address of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                            "type": "string"
                                        },
                                        "GivenName": {
                                            "description": "The given name of the user.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The ID of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Locale": {
                                            "description": "The locale of the user.",
                                            "enum": [
                                                "en",
                                                "fr",
                                                "ko",
                                                "de",
                                                "es",
                                                "ja",
                                                "ru",
                                                "zh_CN",
                                                "zh_TW",
                                                "pt_BR",
                                                "default"
                                            ],
                                            "type": "string"
                                        },
                                        "ModifiedTimestamp": {
                                            "description": "The time when the user was modified.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "OrganizationId": {
                                            "description": "The ID of the organization.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "RecycleBinFolderId": {
                                            "description": "The ID of the recycle bin folder.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "[\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "RootFolderId": {
                                            "description": "The ID of the root folder.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "[\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the user.",
                                            "enum": [
                                                "ACTIVE",
                                                "INACTIVE",
                                                "PENDING"
                                            ],
                                            "type": "string"
                                        },
                                        "Storage": {
                                            "description": "The storage for the user.",
                                            "properties": {
                                                "StorageRule": {
                                                    "description": "The storage for a user.",
                                                    "properties": {
                                                        "StorageAllocatedInBytes": {
                                                            "description": "The amount of storage allocated, in bytes.",
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "StorageType": {
                                                            "description": "The type of storage.",
                                                            "enum": [
                                                                "UNLIMITED",
                                                                "QUOTA"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "StorageUtilizedInBytes": {
                                                    "description": "The amount of storage used, in bytes.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Surname": {
                                            "description": "The surname of the user.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "TimeZoneId": {
                                            "description": "The time zone ID of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Type": {
                                            "description": "The type of user.",
                                            "enum": [
                                                "USER",
                                                "ADMIN",
                                                "POWERUSER",
                                                "MINIMALUSER",
                                                "WORKSPACESUSER"
                                            ],
                                            "type": "string"
                                        },
                                        "Username": {
                                            "description": "The login name of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "CreatedTimestamp": {
                                    "description": "The time that the comment was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ParentId": {
                                    "description": "The ID of the parent comment.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "RecipientId": {
                                    "description": "If the comment is a reply to another user's comment, this field contains the user ID of the user being replied to.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the comment.",
                                    "enum": [
                                        "DRAFT",
                                        "PUBLISHED",
                                        "DELETED"
                                    ],
                                    "type": "string"
                                },
                                "Text": {
                                    "description": "The text of the comment.",
                                    "format": "password",
                                    "maxLength": 2048,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "ThreadId": {
                                    "description": "The ID of the root comment in the thread.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "Visibility": {
                                    "description": "The visibility of the comment. Options are either PRIVATE, where the comment is visible only to the comment author and document owner and co-owners, or PUBLIC, where the comment is visible to document owners, co-owners, and contributors.",
                                    "enum": [
                                        "PUBLIC",
                                        "PRIVATE"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "CommentId"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": "The marker for the next set of results. This marker was received from a previous call.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "pattern": "[\\u0000-\\u00FF]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeDocumentVersionsRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeDocumentVersionsResponse": {
                "properties": {
                    "DocumentVersions": {
                        "description": "The document versions.",
                        "items": {
                            "description": "Describes a version of a document.",
                            "properties": {
                                "ContentCreatedTimestamp": {
                                    "description": "The timestamp when the content of the document was originally created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ContentModifiedTimestamp": {
                                    "description": "The timestamp when the content of the document was modified.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ContentType": {
                                    "description": "The content type of the document.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "CreatedTimestamp": {
                                    "description": "The timestamp when the document was first uploaded.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "CreatorId": {
                                    "description": "The ID of the creator.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The ID of the version.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "ModifiedTimestamp": {
                                    "description": "The timestamp when the document was last uploaded.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the version.",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                    "type": "string"
                                },
                                "Signature": {
                                    "description": "The signature of the document.",
                                    "maxLength": 128,
                                    "minLength": 0,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Size": {
                                    "description": "The size of the document, in bytes.",
                                    "type": "integer"
                                },
                                "Source": {
                                    "description": "The source of the document.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "enum": [
                                                    "ORIGINAL",
                                                    "WITH_COMMENTS"
                                                ],
                                                "type": "string"
                                            },
                                            "value": {
                                                "format": "password",
                                                "maxLength": 1024,
                                                "minLength": 1,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "Status": {
                                    "description": "The status of the document.",
                                    "enum": [
                                        "INITIALIZED",
                                        "ACTIVE"
                                    ],
                                    "type": "string"
                                },
                                "Thumbnail": {
                                    "description": "The thumbnail of the document.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "enum": [
                                                    "SMALL",
                                                    "SMALL_HQ",
                                                    "LARGE"
                                                ],
                                                "type": "string"
                                            },
                                            "value": {
                                                "format": "password",
                                                "maxLength": 1024,
                                                "minLength": 1,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeFolderContentsRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeFolderContentsResponse": {
                "properties": {
                    "Documents": {
                        "description": "The documents in the specified folder.",
                        "items": {
                            "description": "Describes the document.",
                            "properties": {
                                "CreatedTimestamp": {
                                    "description": "The time when the document was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "CreatorId": {
                                    "description": "The ID of the creator.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The ID of the document.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "Labels": {
                                    "description": "List of labels on the document.",
                                    "items": {
                                        "maxLength": 32,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                        "type": "string"
                                    },
                                    "maxItems": 20,
                                    "type": "array"
                                },
                                "LatestVersionMetadata": {
                                    "description": "The latest version of the document.",
                                    "properties": {
                                        "ContentCreatedTimestamp": {
                                            "description": "The timestamp when the content of the document was originally created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ContentModifiedTimestamp": {
                                            "description": "The timestamp when the content of the document was modified.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ContentType": {
                                            "description": "The content type of the document.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "CreatedTimestamp": {
                                            "description": "The timestamp when the document was first uploaded.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "CreatorId": {
                                            "description": "The ID of the creator.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The ID of the version.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "[\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "ModifiedTimestamp": {
                                            "description": "The timestamp when the document was last uploaded.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the version.",
                                            "maxLength": 255,
                                            "minLength": 1,
                                            "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                            "type": "string"
                                        },
                                        "Signature": {
                                            "description": "The signature of the document.",
                                            "maxLength": 128,
                                            "minLength": 0,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Size": {
                                            "description": "The size of the document, in bytes.",
                                            "type": "integer"
                                        },
                                        "Source": {
                                            "description": "The source of the document.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "enum": [
                                                            "ORIGINAL",
                                                            "WITH_COMMENTS"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "format": "password",
                                                        "maxLength": 1024,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Status": {
                                            "description": "The status of the document.",
                                            "enum": [
                                                "INITIALIZED",
                                                "ACTIVE"
                                            ],
                                            "type": "string"
                                        },
                                        "Thumbnail": {
                                            "description": "The thumbnail of the document.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "enum": [
                                                            "SMALL",
                                                            "SMALL_HQ",
                                                            "LARGE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "format": "password",
                                                        "maxLength": 1024,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ModifiedTimestamp": {
                                    "description": "The time when the document was updated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ParentFolderId": {
                                    "description": "The ID of the parent folder.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "ResourceState": {
                                    "description": "The resource state.",
                                    "enum": [
                                        "ACTIVE",
                                        "RESTORING",
                                        "RECYCLING",
                                        "RECYCLED"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Folders": {
                        "description": "The subfolders in the specified folder.",
                        "items": {
                            "description": "Describes a folder.",
                            "properties": {
                                "CreatedTimestamp": {
                                    "description": "The time when the folder was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "CreatorId": {
                                    "description": "The ID of the creator.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The ID of the folder.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "Labels": {
                                    "description": "List of labels on the folder.",
                                    "items": {
                                        "maxLength": 32,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                        "type": "string"
                                    },
                                    "maxItems": 20,
                                    "type": "array"
                                },
                                "LatestVersionSize": {
                                    "description": "The size of the latest version of the folder metadata.",
                                    "type": "integer"
                                },
                                "ModifiedTimestamp": {
                                    "description": "The time when the folder was updated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the folder.",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                    "type": "string"
                                },
                                "ParentFolderId": {
                                    "description": "The ID of the parent folder.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "ResourceState": {
                                    "description": "The resource state of the folder.",
                                    "enum": [
                                        "ACTIVE",
                                        "RESTORING",
                                        "RECYCLING",
                                        "RECYCLED"
                                    ],
                                    "type": "string"
                                },
                                "Signature": {
                                    "description": "The unique identifier created from the subfolders and documents of the folder.",
                                    "maxLength": 128,
                                    "minLength": 0,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Size": {
                                    "description": "The size of the folder metadata.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeGroupsRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeGroupsResponse": {
                "properties": {
                    "Groups": {
                        "description": "The list of groups.",
                        "items": {
                            "description": "Describes the metadata of a user group.",
                            "properties": {
                                "Id": {
                                    "description": "The ID of the user group.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the group.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "pattern": "[\\u0000-\\u00FF]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeNotificationSubscriptionsRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeNotificationSubscriptionsResponse": {
                "properties": {
                    "Marker": {
                        "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Subscriptions": {
                        "description": "The subscriptions.",
                        "items": {
                            "description": "Describes a subscription.",
                            "properties": {
                                "EndPoint": {
                                    "description": "The endpoint of the subscription.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Protocol": {
                                    "description": "The protocol of the subscription.",
                                    "enum": [
                                        "HTTPS"
                                    ],
                                    "type": "string"
                                },
                                "SubscriptionId": {
                                    "description": "The ID of the subscription.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 256,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeResourcePermissionsRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeResourcePermissionsResponse": {
                "properties": {
                    "Marker": {
                        "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Principals": {
                        "description": "The principals.",
                        "items": {
                            "description": "Describes a resource.",
                            "properties": {
                                "Id": {
                                    "description": "The ID of the resource.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Roles": {
                                    "description": "The permission information for the resource.",
                                    "items": {
                                        "description": "Describes the permissions.",
                                        "properties": {
                                            "Role": {
                                                "description": "The role of the user.",
                                                "enum": [
                                                    "VIEWER",
                                                    "CONTRIBUTOR",
                                                    "OWNER",
                                                    "COOWNER"
                                                ],
                                                "type": "string"
                                            },
                                            "Type": {
                                                "description": "The type of permissions.",
                                                "enum": [
                                                    "DIRECT",
                                                    "INHERITED"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "Type": {
                                    "description": "The type of resource.",
                                    "enum": [
                                        "USER",
                                        "GROUP",
                                        "INVITE",
                                        "ANONYMOUS",
                                        "ORGANIZATION"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeRootFoldersRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeRootFoldersResponse": {
                "properties": {
                    "Folders": {
                        "description": "The user's special folders.",
                        "items": {
                            "description": "Describes a folder.",
                            "properties": {
                                "CreatedTimestamp": {
                                    "description": "The time when the folder was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "CreatorId": {
                                    "description": "The ID of the creator.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The ID of the folder.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "Labels": {
                                    "description": "List of labels on the folder.",
                                    "items": {
                                        "maxLength": 32,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                        "type": "string"
                                    },
                                    "maxItems": 20,
                                    "type": "array"
                                },
                                "LatestVersionSize": {
                                    "description": "The size of the latest version of the folder metadata.",
                                    "type": "integer"
                                },
                                "ModifiedTimestamp": {
                                    "description": "The time when the folder was updated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the folder.",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                    "type": "string"
                                },
                                "ParentFolderId": {
                                    "description": "The ID of the parent folder.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "ResourceState": {
                                    "description": "The resource state of the folder.",
                                    "enum": [
                                        "ACTIVE",
                                        "RESTORING",
                                        "RECYCLING",
                                        "RECYCLED"
                                    ],
                                    "type": "string"
                                },
                                "Signature": {
                                    "description": "The unique identifier created from the subfolders and documents of the folder.",
                                    "maxLength": 128,
                                    "minLength": 0,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Size": {
                                    "description": "The size of the folder metadata.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": "The marker for the next set of results.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeUsersRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeUsersResponse": {
                "properties": {
                    "Marker": {
                        "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TotalNumberOfUsers": {
                        "description": "The total number of users included in the results.",
                        "type": "integer"
                    },
                    "Users": {
                        "description": "The users.",
                        "items": {
                            "description": "Describes a user.",
                            "properties": {
                                "CreatedTimestamp": {
                                    "description": "The time when the user was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "EmailAddress": {
                                    "description": "The email address of the user.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                    "type": "string"
                                },
                                "GivenName": {
                                    "description": "The given name of the user.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The ID of the user.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Locale": {
                                    "description": "The locale of the user.",
                                    "enum": [
                                        "en",
                                        "fr",
                                        "ko",
                                        "de",
                                        "es",
                                        "ja",
                                        "ru",
                                        "zh_CN",
                                        "zh_TW",
                                        "pt_BR",
                                        "default"
                                    ],
                                    "type": "string"
                                },
                                "ModifiedTimestamp": {
                                    "description": "The time when the user was modified.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "OrganizationId": {
                                    "description": "The ID of the organization.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "RecycleBinFolderId": {
                                    "description": "The ID of the recycle bin folder.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "RootFolderId": {
                                    "description": "The ID of the root folder.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the user.",
                                    "enum": [
                                        "ACTIVE",
                                        "INACTIVE",
                                        "PENDING"
                                    ],
                                    "type": "string"
                                },
                                "Storage": {
                                    "description": "The storage for the user.",
                                    "properties": {
                                        "StorageRule": {
                                            "description": "The storage for a user.",
                                            "properties": {
                                                "StorageAllocatedInBytes": {
                                                    "description": "The amount of storage allocated, in bytes.",
                                                    "minimum": 0,
                                                    "type": "integer"
                                                },
                                                "StorageType": {
                                                    "description": "The type of storage.",
                                                    "enum": [
                                                        "UNLIMITED",
                                                        "QUOTA"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "StorageUtilizedInBytes": {
                                            "description": "The amount of storage used, in bytes.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Surname": {
                                    "description": "The surname of the user.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "TimeZoneId": {
                                    "description": "The time zone ID of the user.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of user.",
                                    "enum": [
                                        "USER",
                                        "ADMIN",
                                        "POWERUSER",
                                        "MINIMALUSER",
                                        "WORKSPACESUSER"
                                    ],
                                    "type": "string"
                                },
                                "Username": {
                                    "description": "The login name of the user.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DocumentContentType": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "DocumentLockedForCommentsException": {},
            "DocumentMetadata": {
                "description": "Describes the document.",
                "properties": {
                    "CreatedTimestamp": {
                        "description": "The time when the document was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "CreatorId": {
                        "description": "The ID of the creator.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "Id": {
                        "description": "The ID of the document.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "Labels": {
                        "description": "List of labels on the document.",
                        "items": {
                            "maxLength": 32,
                            "minLength": 1,
                            "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                            "type": "string"
                        },
                        "maxItems": 20,
                        "type": "array"
                    },
                    "LatestVersionMetadata": {
                        "description": "The latest version of the document.",
                        "properties": {
                            "ContentCreatedTimestamp": {
                                "description": "The timestamp when the content of the document was originally created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ContentModifiedTimestamp": {
                                "description": "The timestamp when the content of the document was modified.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ContentType": {
                                "description": "The content type of the document.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "CreatedTimestamp": {
                                "description": "The timestamp when the document was first uploaded.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "CreatorId": {
                                "description": "The ID of the creator.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Id": {
                                "description": "The ID of the version.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "ModifiedTimestamp": {
                                "description": "The timestamp when the document was last uploaded.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the version.",
                                "maxLength": 255,
                                "minLength": 1,
                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                "type": "string"
                            },
                            "Signature": {
                                "description": "The signature of the document.",
                                "maxLength": 128,
                                "minLength": 0,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Size": {
                                "description": "The size of the document, in bytes.",
                                "type": "integer"
                            },
                            "Source": {
                                "description": "The source of the document.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "enum": [
                                                "ORIGINAL",
                                                "WITH_COMMENTS"
                                            ],
                                            "type": "string"
                                        },
                                        "value": {
                                            "format": "password",
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "Status": {
                                "description": "The status of the document.",
                                "enum": [
                                    "INITIALIZED",
                                    "ACTIVE"
                                ],
                                "type": "string"
                            },
                            "Thumbnail": {
                                "description": "The thumbnail of the document.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "enum": [
                                                "SMALL",
                                                "SMALL_HQ",
                                                "LARGE"
                                            ],
                                            "type": "string"
                                        },
                                        "value": {
                                            "format": "password",
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "ModifiedTimestamp": {
                        "description": "The time when the document was updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ParentFolderId": {
                        "description": "The ID of the parent folder.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "ResourceState": {
                        "description": "The resource state.",
                        "enum": [
                            "ACTIVE",
                            "RESTORING",
                            "RECYCLING",
                            "RECYCLED"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DocumentMetadataList": {
                "items": {
                    "description": "Describes the document.",
                    "properties": {
                        "CreatedTimestamp": {
                            "description": "The time when the document was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "CreatorId": {
                            "description": "The ID of the creator.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "Id": {
                            "description": "The ID of the document.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[\\w+-.@]+",
                            "type": "string"
                        },
                        "Labels": {
                            "description": "List of labels on the document.",
                            "items": {
                                "maxLength": 32,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                "type": "string"
                            },
                            "maxItems": 20,
                            "type": "array"
                        },
                        "LatestVersionMetadata": {
                            "description": "The latest version of the document.",
                            "properties": {
                                "ContentCreatedTimestamp": {
                                    "description": "The timestamp when the content of the document was originally created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ContentModifiedTimestamp": {
                                    "description": "The timestamp when the content of the document was modified.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ContentType": {
                                    "description": "The content type of the document.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "CreatedTimestamp": {
                                    "description": "The timestamp when the document was first uploaded.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "CreatorId": {
                                    "description": "The ID of the creator.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The ID of the version.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "ModifiedTimestamp": {
                                    "description": "The timestamp when the document was last uploaded.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the version.",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                    "type": "string"
                                },
                                "Signature": {
                                    "description": "The signature of the document.",
                                    "maxLength": 128,
                                    "minLength": 0,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Size": {
                                    "description": "The size of the document, in bytes.",
                                    "type": "integer"
                                },
                                "Source": {
                                    "description": "The source of the document.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "enum": [
                                                    "ORIGINAL",
                                                    "WITH_COMMENTS"
                                                ],
                                                "type": "string"
                                            },
                                            "value": {
                                                "format": "password",
                                                "maxLength": 1024,
                                                "minLength": 1,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "Status": {
                                    "description": "The status of the document.",
                                    "enum": [
                                        "INITIALIZED",
                                        "ACTIVE"
                                    ],
                                    "type": "string"
                                },
                                "Thumbnail": {
                                    "description": "The thumbnail of the document.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "enum": [
                                                    "SMALL",
                                                    "SMALL_HQ",
                                                    "LARGE"
                                                ],
                                                "type": "string"
                                            },
                                            "value": {
                                                "format": "password",
                                                "maxLength": 1024,
                                                "minLength": 1,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "ModifiedTimestamp": {
                            "description": "The time when the document was updated.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ParentFolderId": {
                            "description": "The ID of the parent folder.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[\\w+-.@]+",
                            "type": "string"
                        },
                        "ResourceState": {
                            "description": "The resource state.",
                            "enum": [
                                "ACTIVE",
                                "RESTORING",
                                "RECYCLING",
                                "RECYCLED"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DocumentSourceType": {
                "enum": [
                    "ORIGINAL",
                    "WITH_COMMENTS"
                ],
                "type": "string"
            },
            "DocumentSourceUrlMap": {
                "items": {
                    "properties": {
                        "key": {
                            "enum": [
                                "ORIGINAL",
                                "WITH_COMMENTS"
                            ],
                            "type": "string"
                        },
                        "value": {
                            "format": "password",
                            "maxLength": 1024,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DocumentStatusType": {
                "enum": [
                    "INITIALIZED",
                    "ACTIVE"
                ],
                "type": "string"
            },
            "DocumentThumbnailType": {
                "enum": [
                    "SMALL",
                    "SMALL_HQ",
                    "LARGE"
                ],
                "type": "string"
            },
            "DocumentThumbnailUrlMap": {
                "items": {
                    "properties": {
                        "key": {
                            "enum": [
                                "SMALL",
                                "SMALL_HQ",
                                "LARGE"
                            ],
                            "type": "string"
                        },
                        "value": {
                            "format": "password",
                            "maxLength": 1024,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DocumentVersionIdType": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "[\\w+-.@]+",
                "type": "string"
            },
            "DocumentVersionMetadata": {
                "description": "Describes a version of a document.",
                "properties": {
                    "ContentCreatedTimestamp": {
                        "description": "The timestamp when the content of the document was originally created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ContentModifiedTimestamp": {
                        "description": "The timestamp when the content of the document was modified.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ContentType": {
                        "description": "The content type of the document.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "CreatedTimestamp": {
                        "description": "The timestamp when the document was first uploaded.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "CreatorId": {
                        "description": "The ID of the creator.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "Id": {
                        "description": "The ID of the version.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "ModifiedTimestamp": {
                        "description": "The timestamp when the document was last uploaded.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the version.",
                        "maxLength": 255,
                        "minLength": 1,
                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                        "type": "string"
                    },
                    "Signature": {
                        "description": "The signature of the document.",
                        "maxLength": 128,
                        "minLength": 0,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "Size": {
                        "description": "The size of the document, in bytes.",
                        "type": "integer"
                    },
                    "Source": {
                        "description": "The source of the document.",
                        "items": {
                            "properties": {
                                "key": {
                                    "enum": [
                                        "ORIGINAL",
                                        "WITH_COMMENTS"
                                    ],
                                    "type": "string"
                                },
                                "value": {
                                    "format": "password",
                                    "maxLength": 1024,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Status": {
                        "description": "The status of the document.",
                        "enum": [
                            "INITIALIZED",
                            "ACTIVE"
                        ],
                        "type": "string"
                    },
                    "Thumbnail": {
                        "description": "The thumbnail of the document.",
                        "items": {
                            "properties": {
                                "key": {
                                    "enum": [
                                        "SMALL",
                                        "SMALL_HQ",
                                        "LARGE"
                                    ],
                                    "type": "string"
                                },
                                "value": {
                                    "format": "password",
                                    "maxLength": 1024,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DocumentVersionMetadataList": {
                "items": {
                    "description": "Describes a version of a document.",
                    "properties": {
                        "ContentCreatedTimestamp": {
                            "description": "The timestamp when the content of the document was originally created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ContentModifiedTimestamp": {
                            "description": "The timestamp when the content of the document was modified.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ContentType": {
                            "description": "The content type of the document.",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "CreatedTimestamp": {
                            "description": "The timestamp when the document was first uploaded.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "CreatorId": {
                            "description": "The ID of the creator.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "Id": {
                            "description": "The ID of the version.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[\\w+-.@]+",
                            "type": "string"
                        },
                        "ModifiedTimestamp": {
                            "description": "The timestamp when the document was last uploaded.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the version.",
                            "maxLength": 255,
                            "minLength": 1,
                            "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                            "type": "string"
                        },
                        "Signature": {
                            "description": "The signature of the document.",
                            "maxLength": 128,
                            "minLength": 0,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "Size": {
                            "description": "The size of the document, in bytes.",
                            "type": "integer"
                        },
                        "Source": {
                            "description": "The source of the document.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "enum": [
                                            "ORIGINAL",
                                            "WITH_COMMENTS"
                                        ],
                                        "type": "string"
                                    },
                                    "value": {
                                        "format": "password",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "Status": {
                            "description": "The status of the document.",
                            "enum": [
                                "INITIALIZED",
                                "ACTIVE"
                            ],
                            "type": "string"
                        },
                        "Thumbnail": {
                            "description": "The thumbnail of the document.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "enum": [
                                            "SMALL",
                                            "SMALL_HQ",
                                            "LARGE"
                                        ],
                                        "type": "string"
                                    },
                                    "value": {
                                        "format": "password",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DocumentVersionStatus": {
                "enum": [
                    "ACTIVE"
                ],
                "type": "string"
            },
            "DraftUploadOutOfSyncException": {},
            "EmailAddressType": {
                "maxLength": 256,
                "minLength": 1,
                "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                "type": "string"
            },
            "EntityAlreadyExistsException": {},
            "EntityNotExistsException": {},
            "FailedDependencyException": {},
            "FieldNamesType": {
                "maxLength": 256,
                "minLength": 1,
                "pattern": "[\\w,]+",
                "type": "string"
            },
            "FolderContentType": {
                "enum": [
                    "ALL",
                    "DOCUMENT",
                    "FOLDER"
                ],
                "type": "string"
            },
            "FolderMetadata": {
                "description": "Describes a folder.",
                "properties": {
                    "CreatedTimestamp": {
                        "description": "The time when the folder was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "CreatorId": {
                        "description": "The ID of the creator.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "Id": {
                        "description": "The ID of the folder.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "Labels": {
                        "description": "List of labels on the folder.",
                        "items": {
                            "maxLength": 32,
                            "minLength": 1,
                            "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                            "type": "string"
                        },
                        "maxItems": 20,
                        "type": "array"
                    },
                    "LatestVersionSize": {
                        "description": "The size of the latest version of the folder metadata.",
                        "type": "integer"
                    },
                    "ModifiedTimestamp": {
                        "description": "The time when the folder was updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the folder.",
                        "maxLength": 255,
                        "minLength": 1,
                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                        "type": "string"
                    },
                    "ParentFolderId": {
                        "description": "The ID of the parent folder.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "ResourceState": {
                        "description": "The resource state of the folder.",
                        "enum": [
                            "ACTIVE",
                            "RESTORING",
                            "RECYCLING",
                            "RECYCLED"
                        ],
                        "type": "string"
                    },
                    "Signature": {
                        "description": "The unique identifier created from the subfolders and documents of the folder.",
                        "maxLength": 128,
                        "minLength": 0,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "Size": {
                        "description": "The size of the folder metadata.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "FolderMetadataList": {
                "items": {
                    "description": "Describes a folder.",
                    "properties": {
                        "CreatedTimestamp": {
                            "description": "The time when the folder was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "CreatorId": {
                            "description": "The ID of the creator.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "Id": {
                            "description": "The ID of the folder.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[\\w+-.@]+",
                            "type": "string"
                        },
                        "Labels": {
                            "description": "List of labels on the folder.",
                            "items": {
                                "maxLength": 32,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                "type": "string"
                            },
                            "maxItems": 20,
                            "type": "array"
                        },
                        "LatestVersionSize": {
                            "description": "The size of the latest version of the folder metadata.",
                            "type": "integer"
                        },
                        "ModifiedTimestamp": {
                            "description": "The time when the folder was updated.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the folder.",
                            "maxLength": 255,
                            "minLength": 1,
                            "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                            "type": "string"
                        },
                        "ParentFolderId": {
                            "description": "The ID of the parent folder.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[\\w+-.@]+",
                            "type": "string"
                        },
                        "ResourceState": {
                            "description": "The resource state of the folder.",
                            "enum": [
                                "ACTIVE",
                                "RESTORING",
                                "RECYCLING",
                                "RECYCLED"
                            ],
                            "type": "string"
                        },
                        "Signature": {
                            "description": "The unique identifier created from the subfolders and documents of the folder.",
                            "maxLength": 128,
                            "minLength": 0,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "Size": {
                            "description": "The size of the folder metadata.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "GetCurrentUserRequest": {
                "properties": {},
                "type": "object"
            },
            "GetCurrentUserResponse": {
                "properties": {
                    "User": {
                        "description": "Metadata of the user.",
                        "properties": {
                            "CreatedTimestamp": {
                                "description": "The time when the user was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "EmailAddress": {
                                "description": "The email address of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                "type": "string"
                            },
                            "GivenName": {
                                "description": "The given name of the user.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Id": {
                                "description": "The ID of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Locale": {
                                "description": "The locale of the user.",
                                "enum": [
                                    "en",
                                    "fr",
                                    "ko",
                                    "de",
                                    "es",
                                    "ja",
                                    "ru",
                                    "zh_CN",
                                    "zh_TW",
                                    "pt_BR",
                                    "default"
                                ],
                                "type": "string"
                            },
                            "ModifiedTimestamp": {
                                "description": "The time when the user was modified.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "OrganizationId": {
                                "description": "The ID of the organization.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "RecycleBinFolderId": {
                                "description": "The ID of the recycle bin folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "RootFolderId": {
                                "description": "The ID of the root folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the user.",
                                "enum": [
                                    "ACTIVE",
                                    "INACTIVE",
                                    "PENDING"
                                ],
                                "type": "string"
                            },
                            "Storage": {
                                "description": "The storage for the user.",
                                "properties": {
                                    "StorageRule": {
                                        "description": "The storage for a user.",
                                        "properties": {
                                            "StorageAllocatedInBytes": {
                                                "description": "The amount of storage allocated, in bytes.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "StorageType": {
                                                "description": "The type of storage.",
                                                "enum": [
                                                    "UNLIMITED",
                                                    "QUOTA"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "StorageUtilizedInBytes": {
                                        "description": "The amount of storage used, in bytes.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "Surname": {
                                "description": "The surname of the user.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "TimeZoneId": {
                                "description": "The time zone ID of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Type": {
                                "description": "The type of user.",
                                "enum": [
                                    "USER",
                                    "ADMIN",
                                    "POWERUSER",
                                    "MINIMALUSER",
                                    "WORKSPACESUSER"
                                ],
                                "type": "string"
                            },
                            "Username": {
                                "description": "The login name of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetDocumentPathRequest": {
                "properties": {},
                "type": "object"
            },
            "GetDocumentPathResponse": {
                "properties": {
                    "Path": {
                        "description": "The path information.",
                        "properties": {
                            "Components": {
                                "description": "The components of the resource path.",
                                "items": {
                                    "description": "Describes the resource path.",
                                    "properties": {
                                        "Id": {
                                            "description": "The ID of the resource path.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the resource path.",
                                            "maxLength": 255,
                                            "minLength": 1,
                                            "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetDocumentRequest": {
                "properties": {},
                "type": "object"
            },
            "GetDocumentResponse": {
                "properties": {
                    "CustomMetadata": {
                        "description": "The custom metadata on the document.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 56,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 8,
                        "minItems": 1,
                        "type": "array"
                    },
                    "Metadata": {
                        "description": "The metadata details of the document.",
                        "properties": {
                            "CreatedTimestamp": {
                                "description": "The time when the document was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "CreatorId": {
                                "description": "The ID of the creator.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Id": {
                                "description": "The ID of the document.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Labels": {
                                "description": "List of labels on the document.",
                                "items": {
                                    "maxLength": 32,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                    "type": "string"
                                },
                                "maxItems": 20,
                                "type": "array"
                            },
                            "LatestVersionMetadata": {
                                "description": "The latest version of the document.",
                                "properties": {
                                    "ContentCreatedTimestamp": {
                                        "description": "The timestamp when the content of the document was originally created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ContentModifiedTimestamp": {
                                        "description": "The timestamp when the content of the document was modified.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ContentType": {
                                        "description": "The content type of the document.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "CreatedTimestamp": {
                                        "description": "The timestamp when the document was first uploaded.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "CreatorId": {
                                        "description": "The ID of the creator.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[&\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The ID of the version.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "ModifiedTimestamp": {
                                        "description": "The timestamp when the document was last uploaded.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the version.",
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                        "type": "string"
                                    },
                                    "Signature": {
                                        "description": "The signature of the document.",
                                        "maxLength": 128,
                                        "minLength": 0,
                                        "pattern": "[&\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "Size": {
                                        "description": "The size of the document, in bytes.",
                                        "type": "integer"
                                    },
                                    "Source": {
                                        "description": "The source of the document.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "enum": [
                                                        "ORIGINAL",
                                                        "WITH_COMMENTS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "format": "password",
                                                    "maxLength": 1024,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Status": {
                                        "description": "The status of the document.",
                                        "enum": [
                                            "INITIALIZED",
                                            "ACTIVE"
                                        ],
                                        "type": "string"
                                    },
                                    "Thumbnail": {
                                        "description": "The thumbnail of the document.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "enum": [
                                                        "SMALL",
                                                        "SMALL_HQ",
                                                        "LARGE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "format": "password",
                                                    "maxLength": 1024,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "ModifiedTimestamp": {
                                "description": "The time when the document was updated.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ParentFolderId": {
                                "description": "The ID of the parent folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "ResourceState": {
                                "description": "The resource state.",
                                "enum": [
                                    "ACTIVE",
                                    "RESTORING",
                                    "RECYCLING",
                                    "RECYCLED"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetDocumentVersionRequest": {
                "properties": {},
                "type": "object"
            },
            "GetDocumentVersionResponse": {
                "properties": {
                    "CustomMetadata": {
                        "description": "The custom metadata on the document version.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 56,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 8,
                        "minItems": 1,
                        "type": "array"
                    },
                    "Metadata": {
                        "description": "The version metadata.",
                        "properties": {
                            "ContentCreatedTimestamp": {
                                "description": "The timestamp when the content of the document was originally created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ContentModifiedTimestamp": {
                                "description": "The timestamp when the content of the document was modified.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ContentType": {
                                "description": "The content type of the document.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "CreatedTimestamp": {
                                "description": "The timestamp when the document was first uploaded.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "CreatorId": {
                                "description": "The ID of the creator.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Id": {
                                "description": "The ID of the version.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "ModifiedTimestamp": {
                                "description": "The timestamp when the document was last uploaded.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the version.",
                                "maxLength": 255,
                                "minLength": 1,
                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                "type": "string"
                            },
                            "Signature": {
                                "description": "The signature of the document.",
                                "maxLength": 128,
                                "minLength": 0,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Size": {
                                "description": "The size of the document, in bytes.",
                                "type": "integer"
                            },
                            "Source": {
                                "description": "The source of the document.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "enum": [
                                                "ORIGINAL",
                                                "WITH_COMMENTS"
                                            ],
                                            "type": "string"
                                        },
                                        "value": {
                                            "format": "password",
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "Status": {
                                "description": "The status of the document.",
                                "enum": [
                                    "INITIALIZED",
                                    "ACTIVE"
                                ],
                                "type": "string"
                            },
                            "Thumbnail": {
                                "description": "The thumbnail of the document.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "enum": [
                                                "SMALL",
                                                "SMALL_HQ",
                                                "LARGE"
                                            ],
                                            "type": "string"
                                        },
                                        "value": {
                                            "format": "password",
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetFolderPathRequest": {
                "properties": {},
                "type": "object"
            },
            "GetFolderPathResponse": {
                "properties": {
                    "Path": {
                        "description": "The path information.",
                        "properties": {
                            "Components": {
                                "description": "The components of the resource path.",
                                "items": {
                                    "description": "Describes the resource path.",
                                    "properties": {
                                        "Id": {
                                            "description": "The ID of the resource path.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the resource path.",
                                            "maxLength": 255,
                                            "minLength": 1,
                                            "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetFolderRequest": {
                "properties": {},
                "type": "object"
            },
            "GetFolderResponse": {
                "properties": {
                    "CustomMetadata": {
                        "description": "The custom metadata on the folder.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 56,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 8,
                        "minItems": 1,
                        "type": "array"
                    },
                    "Metadata": {
                        "description": "The metadata of the folder.",
                        "properties": {
                            "CreatedTimestamp": {
                                "description": "The time when the folder was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "CreatorId": {
                                "description": "The ID of the creator.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Id": {
                                "description": "The ID of the folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Labels": {
                                "description": "List of labels on the folder.",
                                "items": {
                                    "maxLength": 32,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                    "type": "string"
                                },
                                "maxItems": 20,
                                "type": "array"
                            },
                            "LatestVersionSize": {
                                "description": "The size of the latest version of the folder metadata.",
                                "type": "integer"
                            },
                            "ModifiedTimestamp": {
                                "description": "The time when the folder was updated.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the folder.",
                                "maxLength": 255,
                                "minLength": 1,
                                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                "type": "string"
                            },
                            "ParentFolderId": {
                                "description": "The ID of the parent folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "ResourceState": {
                                "description": "The resource state of the folder.",
                                "enum": [
                                    "ACTIVE",
                                    "RESTORING",
                                    "RECYCLING",
                                    "RECYCLED"
                                ],
                                "type": "string"
                            },
                            "Signature": {
                                "description": "The unique identifier created from the subfolders and documents of the folder.",
                                "maxLength": 128,
                                "minLength": 0,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Size": {
                                "description": "The size of the folder metadata.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetResourcesRequest": {
                "properties": {},
                "type": "object"
            },
            "GetResourcesResponse": {
                "properties": {
                    "Documents": {
                        "description": "The documents in the specified collection.",
                        "items": {
                            "description": "Describes the document.",
                            "properties": {
                                "CreatedTimestamp": {
                                    "description": "The time when the document was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "CreatorId": {
                                    "description": "The ID of the creator.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The ID of the document.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "Labels": {
                                    "description": "List of labels on the document.",
                                    "items": {
                                        "maxLength": 32,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                        "type": "string"
                                    },
                                    "maxItems": 20,
                                    "type": "array"
                                },
                                "LatestVersionMetadata": {
                                    "description": "The latest version of the document.",
                                    "properties": {
                                        "ContentCreatedTimestamp": {
                                            "description": "The timestamp when the content of the document was originally created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ContentModifiedTimestamp": {
                                            "description": "The timestamp when the content of the document was modified.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ContentType": {
                                            "description": "The content type of the document.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "CreatedTimestamp": {
                                            "description": "The timestamp when the document was first uploaded.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "CreatorId": {
                                            "description": "The ID of the creator.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The ID of the version.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "[\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "ModifiedTimestamp": {
                                            "description": "The timestamp when the document was last uploaded.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the version.",
                                            "maxLength": 255,
                                            "minLength": 1,
                                            "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                            "type": "string"
                                        },
                                        "Signature": {
                                            "description": "The signature of the document.",
                                            "maxLength": 128,
                                            "minLength": 0,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Size": {
                                            "description": "The size of the document, in bytes.",
                                            "type": "integer"
                                        },
                                        "Source": {
                                            "description": "The source of the document.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "enum": [
                                                            "ORIGINAL",
                                                            "WITH_COMMENTS"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "format": "password",
                                                        "maxLength": 1024,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Status": {
                                            "description": "The status of the document.",
                                            "enum": [
                                                "INITIALIZED",
                                                "ACTIVE"
                                            ],
                                            "type": "string"
                                        },
                                        "Thumbnail": {
                                            "description": "The thumbnail of the document.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "enum": [
                                                            "SMALL",
                                                            "SMALL_HQ",
                                                            "LARGE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "format": "password",
                                                        "maxLength": 1024,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ModifiedTimestamp": {
                                    "description": "The time when the document was updated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ParentFolderId": {
                                    "description": "The ID of the parent folder.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "ResourceState": {
                                    "description": "The resource state.",
                                    "enum": [
                                        "ACTIVE",
                                        "RESTORING",
                                        "RECYCLING",
                                        "RECYCLED"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Folders": {
                        "description": "The folders in the specified folder.",
                        "items": {
                            "description": "Describes a folder.",
                            "properties": {
                                "CreatedTimestamp": {
                                    "description": "The time when the folder was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "CreatorId": {
                                    "description": "The ID of the creator.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The ID of the folder.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "Labels": {
                                    "description": "List of labels on the folder.",
                                    "items": {
                                        "maxLength": 32,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                        "type": "string"
                                    },
                                    "maxItems": 20,
                                    "type": "array"
                                },
                                "LatestVersionSize": {
                                    "description": "The size of the latest version of the folder metadata.",
                                    "type": "integer"
                                },
                                "ModifiedTimestamp": {
                                    "description": "The time when the folder was updated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the folder.",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                    "type": "string"
                                },
                                "ParentFolderId": {
                                    "description": "The ID of the parent folder.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "ResourceState": {
                                    "description": "The resource state of the folder.",
                                    "enum": [
                                        "ACTIVE",
                                        "RESTORING",
                                        "RECYCLING",
                                        "RECYCLED"
                                    ],
                                    "type": "string"
                                },
                                "Signature": {
                                    "description": "The unique identifier created from the subfolders and documents of the folder.",
                                    "maxLength": 128,
                                    "minLength": 0,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Size": {
                                    "description": "The size of the folder metadata.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GroupMetadata": {
                "description": "Describes the metadata of a user group.",
                "properties": {
                    "Id": {
                        "description": "The ID of the user group.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the group.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GroupMetadataList": {
                "items": {
                    "description": "Describes the metadata of a user group.",
                    "properties": {
                        "Id": {
                            "description": "The ID of the user group.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the group.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "GroupNameType": {
                "type": "string"
            },
            "HashType": {
                "maxLength": 128,
                "minLength": 0,
                "pattern": "[&\\w+-.@]+",
                "type": "string"
            },
            "HeaderNameType": {
                "maxLength": 256,
                "minLength": 1,
                "pattern": "[\\w-]+",
                "type": "string"
            },
            "HeaderValueType": {
                "maxLength": 1024,
                "minLength": 1,
                "type": "string"
            },
            "IdType": {
                "maxLength": 256,
                "minLength": 1,
                "pattern": "[&\\w+-.@]+",
                "type": "string"
            },
            "IllegalUserStateException": {},
            "InitiateDocumentVersionUploadRequest": {
                "properties": {
                    "ContentCreatedTimestamp": {
                        "description": "The timestamp when the content of the document was originally created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ContentModifiedTimestamp": {
                        "description": "The timestamp when the content of the document was modified.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ContentType": {
                        "description": "The content type of the document.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "DocumentSizeInBytes": {
                        "description": "The size of the document, in bytes.",
                        "type": "integer"
                    },
                    "Id": {
                        "description": "The ID of the document.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the document.",
                        "maxLength": 255,
                        "minLength": 1,
                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                        "type": "string"
                    },
                    "ParentFolderId": {
                        "description": "The ID of the parent folder.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    }
                },
                "required": [
                    "ParentFolderId"
                ],
                "type": "object"
            },
            "InitiateDocumentVersionUploadResponse": {
                "properties": {
                    "Metadata": {
                        "description": "The document metadata.",
                        "properties": {
                            "CreatedTimestamp": {
                                "description": "The time when the document was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "CreatorId": {
                                "description": "The ID of the creator.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Id": {
                                "description": "The ID of the document.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Labels": {
                                "description": "List of labels on the document.",
                                "items": {
                                    "maxLength": 32,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                                    "type": "string"
                                },
                                "maxItems": 20,
                                "type": "array"
                            },
                            "LatestVersionMetadata": {
                                "description": "The latest version of the document.",
                                "properties": {
                                    "ContentCreatedTimestamp": {
                                        "description": "The timestamp when the content of the document was originally created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ContentModifiedTimestamp": {
                                        "description": "The timestamp when the content of the document was modified.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ContentType": {
                                        "description": "The content type of the document.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "CreatedTimestamp": {
                                        "description": "The timestamp when the document was first uploaded.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "CreatorId": {
                                        "description": "The ID of the creator.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[&\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The ID of the version.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "ModifiedTimestamp": {
                                        "description": "The timestamp when the document was last uploaded.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the version.",
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                        "type": "string"
                                    },
                                    "Signature": {
                                        "description": "The signature of the document.",
                                        "maxLength": 128,
                                        "minLength": 0,
                                        "pattern": "[&\\w+-.@]+",
                                        "type": "string"
                                    },
                                    "Size": {
                                        "description": "The size of the document, in bytes.",
                                        "type": "integer"
                                    },
                                    "Source": {
                                        "description": "The source of the document.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "enum": [
                                                        "ORIGINAL",
                                                        "WITH_COMMENTS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "format": "password",
                                                    "maxLength": 1024,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Status": {
                                        "description": "The status of the document.",
                                        "enum": [
                                            "INITIALIZED",
                                            "ACTIVE"
                                        ],
                                        "type": "string"
                                    },
                                    "Thumbnail": {
                                        "description": "The thumbnail of the document.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "enum": [
                                                        "SMALL",
                                                        "SMALL_HQ",
                                                        "LARGE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "format": "password",
                                                    "maxLength": 1024,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "ModifiedTimestamp": {
                                "description": "The time when the document was updated.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ParentFolderId": {
                                "description": "The ID of the parent folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "ResourceState": {
                                "description": "The resource state.",
                                "enum": [
                                    "ACTIVE",
                                    "RESTORING",
                                    "RECYCLING",
                                    "RECYCLED"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "UploadMetadata": {
                        "description": "The upload metadata.",
                        "properties": {
                            "SignedHeaders": {
                                "description": "The signed headers.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[\\w-]+",
                                            "type": "string"
                                        },
                                        "value": {
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "UploadUrl": {
                                "description": "The URL of the upload.",
                                "format": "password",
                                "maxLength": 1024,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "InvalidArgumentException": {},
            "InvalidCommentOperationException": {},
            "InvalidOperationException": {},
            "InvalidPasswordException": {},
            "LimitExceededException": {},
            "LimitType": {
                "maximum": 999,
                "minimum": 1,
                "type": "integer"
            },
            "LocaleType": {
                "enum": [
                    "en",
                    "fr",
                    "ko",
                    "de",
                    "es",
                    "ja",
                    "ru",
                    "zh_CN",
                    "zh_TW",
                    "pt_BR",
                    "default"
                ],
                "type": "string"
            },
            "MarkerType": {
                "maxLength": 2048,
                "minLength": 1,
                "pattern": "[\\u0000-\\u00FF]+",
                "type": "string"
            },
            "MessageType": {
                "format": "password",
                "maxLength": 2048,
                "minLength": 0,
                "type": "string"
            },
            "NotificationOptions": {
                "description": "Set of options which defines notification preferences of given action.",
                "properties": {
                    "EmailMessage": {
                        "description": "Text value to be included in the email body.",
                        "format": "password",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    },
                    "SendEmail": {
                        "description": "Boolean value to indicate an email notification should be sent to the receipients.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "OrderType": {
                "enum": [
                    "ASCENDING",
                    "DESCENDING"
                ],
                "type": "string"
            },
            "OrganizationUserList": {
                "items": {
                    "description": "Describes a user.",
                    "properties": {
                        "CreatedTimestamp": {
                            "description": "The time when the user was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "EmailAddress": {
                            "description": "The email address of the user.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                            "type": "string"
                        },
                        "GivenName": {
                            "description": "The given name of the user.",
                            "maxLength": 64,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Id": {
                            "description": "The ID of the user.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "Locale": {
                            "description": "The locale of the user.",
                            "enum": [
                                "en",
                                "fr",
                                "ko",
                                "de",
                                "es",
                                "ja",
                                "ru",
                                "zh_CN",
                                "zh_TW",
                                "pt_BR",
                                "default"
                            ],
                            "type": "string"
                        },
                        "ModifiedTimestamp": {
                            "description": "The time when the user was modified.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "OrganizationId": {
                            "description": "The ID of the organization.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "RecycleBinFolderId": {
                            "description": "The ID of the recycle bin folder.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[\\w+-.@]+",
                            "type": "string"
                        },
                        "RootFolderId": {
                            "description": "The ID of the root folder.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[\\w+-.@]+",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the user.",
                            "enum": [
                                "ACTIVE",
                                "INACTIVE",
                                "PENDING"
                            ],
                            "type": "string"
                        },
                        "Storage": {
                            "description": "The storage for the user.",
                            "properties": {
                                "StorageRule": {
                                    "description": "The storage for a user.",
                                    "properties": {
                                        "StorageAllocatedInBytes": {
                                            "description": "The amount of storage allocated, in bytes.",
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "StorageType": {
                                            "description": "The type of storage.",
                                            "enum": [
                                                "UNLIMITED",
                                                "QUOTA"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "StorageUtilizedInBytes": {
                                    "description": "The amount of storage used, in bytes.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "Surname": {
                            "description": "The surname of the user.",
                            "maxLength": 64,
                            "minLength": 1,
                            "type": "string"
                        },
                        "TimeZoneId": {
                            "description": "The time zone ID of the user.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Type": {
                            "description": "The type of user.",
                            "enum": [
                                "USER",
                                "ADMIN",
                                "POWERUSER",
                                "MINIMALUSER",
                                "WORKSPACESUSER"
                            ],
                            "type": "string"
                        },
                        "Username": {
                            "description": "The login name of the user.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "PageMarkerType": {
                "maxLength": 2048,
                "minLength": 1,
                "type": "string"
            },
            "Participants": {
                "description": "Describes the users or user groups.",
                "properties": {
                    "Groups": {
                        "description": "The list of user groups.",
                        "items": {
                            "description": "Describes the metadata of a user group.",
                            "properties": {
                                "Id": {
                                    "description": "The ID of the user group.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the group.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Users": {
                        "description": "The list of users.",
                        "items": {
                            "description": "Describes the metadata of the user.",
                            "properties": {
                                "EmailAddress": {
                                    "description": "The email address of the user.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                    "type": "string"
                                },
                                "GivenName": {
                                    "description": "The given name of the user before a rename operation.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The ID of the user.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Surname": {
                                    "description": "The surname of the user.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Username": {
                                    "description": "The name of the user.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "PasswordType": {
                "format": "password",
                "maxLength": 32,
                "minLength": 4,
                "pattern": "[\\u0020-\\u00FF]+",
                "type": "string"
            },
            "PermissionInfo": {
                "description": "Describes the permissions.",
                "properties": {
                    "Role": {
                        "description": "The role of the user.",
                        "enum": [
                            "VIEWER",
                            "CONTRIBUTOR",
                            "OWNER",
                            "COOWNER"
                        ],
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of permissions.",
                        "enum": [
                            "DIRECT",
                            "INHERITED"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PermissionInfoList": {
                "items": {
                    "description": "Describes the permissions.",
                    "properties": {
                        "Role": {
                            "description": "The role of the user.",
                            "enum": [
                                "VIEWER",
                                "CONTRIBUTOR",
                                "OWNER",
                                "COOWNER"
                            ],
                            "type": "string"
                        },
                        "Type": {
                            "description": "The type of permissions.",
                            "enum": [
                                "DIRECT",
                                "INHERITED"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "PositiveIntegerType": {
                "minimum": 1,
                "type": "integer"
            },
            "PositiveSizeType": {
                "minimum": 0,
                "type": "integer"
            },
            "Principal": {
                "description": "Describes a resource.",
                "properties": {
                    "Id": {
                        "description": "The ID of the resource.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "Roles": {
                        "description": "The permission information for the resource.",
                        "items": {
                            "description": "Describes the permissions.",
                            "properties": {
                                "Role": {
                                    "description": "The role of the user.",
                                    "enum": [
                                        "VIEWER",
                                        "CONTRIBUTOR",
                                        "OWNER",
                                        "COOWNER"
                                    ],
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of permissions.",
                                    "enum": [
                                        "DIRECT",
                                        "INHERITED"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Type": {
                        "description": "The type of resource.",
                        "enum": [
                            "USER",
                            "GROUP",
                            "INVITE",
                            "ANONYMOUS",
                            "ORGANIZATION"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PrincipalList": {
                "items": {
                    "description": "Describes a resource.",
                    "properties": {
                        "Id": {
                            "description": "The ID of the resource.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "Roles": {
                            "description": "The permission information for the resource.",
                            "items": {
                                "description": "Describes the permissions.",
                                "properties": {
                                    "Role": {
                                        "description": "The role of the user.",
                                        "enum": [
                                            "VIEWER",
                                            "CONTRIBUTOR",
                                            "OWNER",
                                            "COOWNER"
                                        ],
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The type of permissions.",
                                        "enum": [
                                            "DIRECT",
                                            "INHERITED"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "Type": {
                            "description": "The type of resource.",
                            "enum": [
                                "USER",
                                "GROUP",
                                "INVITE",
                                "ANONYMOUS",
                                "ORGANIZATION"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "PrincipalType": {
                "enum": [
                    "USER",
                    "GROUP",
                    "INVITE",
                    "ANONYMOUS",
                    "ORGANIZATION"
                ],
                "type": "string"
            },
            "ProhibitedStateException": {},
            "RemoveAllResourcePermissionsRequest": {
                "properties": {},
                "type": "object"
            },
            "RemoveResourcePermissionRequest": {
                "properties": {},
                "type": "object"
            },
            "RequestedEntityTooLargeException": {},
            "ResourceAlreadyCheckedOutException": {},
            "ResourceCollectionType": {
                "enum": [
                    "SHARED_WITH_ME"
                ],
                "type": "string"
            },
            "ResourceIdType": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "[\\w+-.@]+",
                "type": "string"
            },
            "ResourceMetadata": {
                "description": "Describes the metadata of a resource.",
                "properties": {
                    "Id": {
                        "description": "The ID of the resource.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the resource.",
                        "maxLength": 255,
                        "minLength": 1,
                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                        "type": "string"
                    },
                    "OriginalName": {
                        "description": "The original name of the resource before a rename operation.",
                        "maxLength": 255,
                        "minLength": 1,
                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                        "type": "string"
                    },
                    "Owner": {
                        "description": "The owner of the resource.",
                        "properties": {
                            "EmailAddress": {
                                "description": "The email address of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                "type": "string"
                            },
                            "GivenName": {
                                "description": "The given name of the user before a rename operation.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Id": {
                                "description": "The ID of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Surname": {
                                "description": "The surname of the user.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Username": {
                                "description": "The name of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "ParentId": {
                        "description": "The parent ID of the resource before a rename operation.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of resource.",
                        "enum": [
                            "FOLDER",
                            "DOCUMENT"
                        ],
                        "type": "string"
                    },
                    "VersionId": {
                        "description": "The version ID of the resource. This is an optional field and is filled for action on document version.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResourceNameType": {
                "maxLength": 255,
                "minLength": 1,
                "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                "type": "string"
            },
            "ResourcePath": {
                "description": "Describes the path information of a resource.",
                "properties": {
                    "Components": {
                        "description": "The components of the resource path.",
                        "items": {
                            "description": "Describes the resource path.",
                            "properties": {
                                "Id": {
                                    "description": "The ID of the resource path.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the resource path.",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ResourcePathComponent": {
                "description": "Describes the resource path.",
                "properties": {
                    "Id": {
                        "description": "The ID of the resource path.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the resource path.",
                        "maxLength": 255,
                        "minLength": 1,
                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResourcePathComponentList": {
                "items": {
                    "description": "Describes the resource path.",
                    "properties": {
                        "Id": {
                            "description": "The ID of the resource path.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the resource path.",
                            "maxLength": 255,
                            "minLength": 1,
                            "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ResourceSortType": {
                "enum": [
                    "DATE",
                    "NAME"
                ],
                "type": "string"
            },
            "ResourceStateType": {
                "enum": [
                    "ACTIVE",
                    "RESTORING",
                    "RECYCLING",
                    "RECYCLED"
                ],
                "type": "string"
            },
            "ResourceType": {
                "enum": [
                    "FOLDER",
                    "DOCUMENT"
                ],
                "type": "string"
            },
            "RolePermissionType": {
                "enum": [
                    "DIRECT",
                    "INHERITED"
                ],
                "type": "string"
            },
            "RoleType": {
                "enum": [
                    "VIEWER",
                    "CONTRIBUTOR",
                    "OWNER",
                    "COOWNER"
                ],
                "type": "string"
            },
            "SearchQueryType": {
                "format": "password",
                "maxLength": 512,
                "minLength": 1,
                "pattern": "[\\u0020-\\uFFFF]+",
                "type": "string"
            },
            "ServiceUnavailableException": {},
            "SharePrincipal": {
                "description": "Describes the recipient type and ID, if available.",
                "properties": {
                    "Id": {
                        "description": "The ID of the recipient.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "Role": {
                        "description": "The role of the recipient.",
                        "enum": [
                            "VIEWER",
                            "CONTRIBUTOR",
                            "OWNER",
                            "COOWNER"
                        ],
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of the recipient.",
                        "enum": [
                            "USER",
                            "GROUP",
                            "INVITE",
                            "ANONYMOUS",
                            "ORGANIZATION"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "Id",
                    "Type",
                    "Role"
                ],
                "type": "object"
            },
            "SharePrincipalList": {
                "items": {
                    "description": "Describes the recipient type and ID, if available.",
                    "properties": {
                        "Id": {
                            "description": "The ID of the recipient.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "Role": {
                            "description": "The role of the recipient.",
                            "enum": [
                                "VIEWER",
                                "CONTRIBUTOR",
                                "OWNER",
                                "COOWNER"
                            ],
                            "type": "string"
                        },
                        "Type": {
                            "description": "The type of the recipient.",
                            "enum": [
                                "USER",
                                "GROUP",
                                "INVITE",
                                "ANONYMOUS",
                                "ORGANIZATION"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "Id",
                        "Type",
                        "Role"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "ShareResult": {
                "description": "Describes the share results of a resource.",
                "properties": {
                    "InviteePrincipalId": {
                        "description": "The ID of the invited user.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "PrincipalId": {
                        "description": "The ID of the principal.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "Role": {
                        "description": "The role.",
                        "enum": [
                            "VIEWER",
                            "CONTRIBUTOR",
                            "OWNER",
                            "COOWNER"
                        ],
                        "type": "string"
                    },
                    "ShareId": {
                        "description": "The ID of the resource that was shared.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status.",
                        "enum": [
                            "SUCCESS",
                            "FAILURE"
                        ],
                        "type": "string"
                    },
                    "StatusMessage": {
                        "description": "The status message.",
                        "format": "password",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ShareResultsList": {
                "items": {
                    "description": "Describes the share results of a resource.",
                    "properties": {
                        "InviteePrincipalId": {
                            "description": "The ID of the invited user.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "PrincipalId": {
                            "description": "The ID of the principal.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "Role": {
                            "description": "The role.",
                            "enum": [
                                "VIEWER",
                                "CONTRIBUTOR",
                                "OWNER",
                                "COOWNER"
                            ],
                            "type": "string"
                        },
                        "ShareId": {
                            "description": "The ID of the resource that was shared.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[\\w+-.@]+",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status.",
                            "enum": [
                                "SUCCESS",
                                "FAILURE"
                            ],
                            "type": "string"
                        },
                        "StatusMessage": {
                            "description": "The status message.",
                            "format": "password",
                            "maxLength": 2048,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ShareStatusType": {
                "enum": [
                    "SUCCESS",
                    "FAILURE"
                ],
                "type": "string"
            },
            "SharedLabel": {
                "maxLength": 32,
                "minLength": 1,
                "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                "type": "string"
            },
            "SharedLabels": {
                "items": {
                    "maxLength": 32,
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*",
                    "type": "string"
                },
                "maxItems": 20,
                "type": "array"
            },
            "SignedHeaderMap": {
                "items": {
                    "properties": {
                        "key": {
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[\\w-]+",
                            "type": "string"
                        },
                        "value": {
                            "maxLength": 1024,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "SizeType": {
                "type": "integer"
            },
            "StorageLimitExceededException": {},
            "StorageLimitWillExceedException": {},
            "StorageRuleType": {
                "description": "Describes the storage for a user.",
                "properties": {
                    "StorageAllocatedInBytes": {
                        "description": "The amount of storage allocated, in bytes.",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "StorageType": {
                        "description": "The type of storage.",
                        "enum": [
                            "UNLIMITED",
                            "QUOTA"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StorageType": {
                "enum": [
                    "UNLIMITED",
                    "QUOTA"
                ],
                "type": "string"
            },
            "Subscription": {
                "description": "Describes a subscription.",
                "properties": {
                    "EndPoint": {
                        "description": "The endpoint of the subscription.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Protocol": {
                        "description": "The protocol of the subscription.",
                        "enum": [
                            "HTTPS"
                        ],
                        "type": "string"
                    },
                    "SubscriptionId": {
                        "description": "The ID of the subscription.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SubscriptionEndPointType": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "SubscriptionList": {
                "items": {
                    "description": "Describes a subscription.",
                    "properties": {
                        "EndPoint": {
                            "description": "The endpoint of the subscription.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Protocol": {
                            "description": "The protocol of the subscription.",
                            "enum": [
                                "HTTPS"
                            ],
                            "type": "string"
                        },
                        "SubscriptionId": {
                            "description": "The ID of the subscription.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 256,
                "type": "array"
            },
            "SubscriptionProtocolType": {
                "enum": [
                    "HTTPS"
                ],
                "type": "string"
            },
            "SubscriptionType": {
                "enum": [
                    "ALL"
                ],
                "type": "string"
            },
            "TimeZoneIdType": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "TimestampType": {
                "format": "date-time",
                "type": "string"
            },
            "TooManyLabelsException": {},
            "TooManySubscriptionsException": {},
            "UnauthorizedOperationException": {},
            "UnauthorizedResourceAccessException": {},
            "UpdateDocumentRequest": {
                "properties": {
                    "Name": {
                        "description": "The name of the document.",
                        "maxLength": 255,
                        "minLength": 1,
                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                        "type": "string"
                    },
                    "ParentFolderId": {
                        "description": "The ID of the parent folder.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "ResourceState": {
                        "description": "The resource state of the document. Only ACTIVE and RECYCLED are supported.",
                        "enum": [
                            "ACTIVE",
                            "RESTORING",
                            "RECYCLING",
                            "RECYCLED"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateDocumentVersionRequest": {
                "properties": {
                    "VersionStatus": {
                        "description": "The status of the version.",
                        "enum": [
                            "ACTIVE"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateFolderRequest": {
                "properties": {
                    "Name": {
                        "description": "The name of the folder.",
                        "maxLength": 255,
                        "minLength": 1,
                        "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                        "type": "string"
                    },
                    "ParentFolderId": {
                        "description": "The ID of the parent folder.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "ResourceState": {
                        "description": "The resource state of the folder. Only ACTIVE and RECYCLED are accepted values from the API.",
                        "enum": [
                            "ACTIVE",
                            "RESTORING",
                            "RECYCLING",
                            "RECYCLED"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateUserRequest": {
                "properties": {
                    "GivenName": {
                        "description": "The given name of the user.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "GrantPoweruserPrivileges": {
                        "description": "Boolean value to determine whether the user is granted Poweruser privileges.",
                        "enum": [
                            "TRUE",
                            "FALSE"
                        ],
                        "type": "string"
                    },
                    "Locale": {
                        "description": "The locale of the user.",
                        "enum": [
                            "en",
                            "fr",
                            "ko",
                            "de",
                            "es",
                            "ja",
                            "ru",
                            "zh_CN",
                            "zh_TW",
                            "pt_BR",
                            "default"
                        ],
                        "type": "string"
                    },
                    "StorageRule": {
                        "description": "The amount of storage for the user.",
                        "properties": {
                            "StorageAllocatedInBytes": {
                                "description": "The amount of storage allocated, in bytes.",
                                "minimum": 0,
                                "type": "integer"
                            },
                            "StorageType": {
                                "description": "The type of storage.",
                                "enum": [
                                    "UNLIMITED",
                                    "QUOTA"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Surname": {
                        "description": "The surname of the user.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TimeZoneId": {
                        "description": "The time zone ID of the user.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of the user.",
                        "enum": [
                            "USER",
                            "ADMIN",
                            "POWERUSER",
                            "MINIMALUSER",
                            "WORKSPACESUSER"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateUserResponse": {
                "properties": {
                    "User": {
                        "description": "The user information.",
                        "properties": {
                            "CreatedTimestamp": {
                                "description": "The time when the user was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "EmailAddress": {
                                "description": "The email address of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                "type": "string"
                            },
                            "GivenName": {
                                "description": "The given name of the user.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Id": {
                                "description": "The ID of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "Locale": {
                                "description": "The locale of the user.",
                                "enum": [
                                    "en",
                                    "fr",
                                    "ko",
                                    "de",
                                    "es",
                                    "ja",
                                    "ru",
                                    "zh_CN",
                                    "zh_TW",
                                    "pt_BR",
                                    "default"
                                ],
                                "type": "string"
                            },
                            "ModifiedTimestamp": {
                                "description": "The time when the user was modified.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "OrganizationId": {
                                "description": "The ID of the organization.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[&\\w+-.@]+",
                                "type": "string"
                            },
                            "RecycleBinFolderId": {
                                "description": "The ID of the recycle bin folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "RootFolderId": {
                                "description": "The ID of the root folder.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w+-.@]+",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the user.",
                                "enum": [
                                    "ACTIVE",
                                    "INACTIVE",
                                    "PENDING"
                                ],
                                "type": "string"
                            },
                            "Storage": {
                                "description": "The storage for the user.",
                                "properties": {
                                    "StorageRule": {
                                        "description": "The storage for a user.",
                                        "properties": {
                                            "StorageAllocatedInBytes": {
                                                "description": "The amount of storage allocated, in bytes.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "StorageType": {
                                                "description": "The type of storage.",
                                                "enum": [
                                                    "UNLIMITED",
                                                    "QUOTA"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "StorageUtilizedInBytes": {
                                        "description": "The amount of storage used, in bytes.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "Surname": {
                                "description": "The surname of the user.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "TimeZoneId": {
                                "description": "The time zone ID of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Type": {
                                "description": "The type of user.",
                                "enum": [
                                    "USER",
                                    "ADMIN",
                                    "POWERUSER",
                                    "MINIMALUSER",
                                    "WORKSPACESUSER"
                                ],
                                "type": "string"
                            },
                            "Username": {
                                "description": "The login name of the user.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UploadMetadata": {
                "description": "Describes the upload.",
                "properties": {
                    "SignedHeaders": {
                        "description": "The signed headers.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[\\w-]+",
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 1024,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "UploadUrl": {
                        "description": "The URL of the upload.",
                        "format": "password",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UrlType": {
                "format": "password",
                "maxLength": 1024,
                "minLength": 1,
                "type": "string"
            },
            "User": {
                "description": "Describes a user.",
                "properties": {
                    "CreatedTimestamp": {
                        "description": "The time when the user was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "EmailAddress": {
                        "description": "The email address of the user.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                        "type": "string"
                    },
                    "GivenName": {
                        "description": "The given name of the user.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Id": {
                        "description": "The ID of the user.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "Locale": {
                        "description": "The locale of the user.",
                        "enum": [
                            "en",
                            "fr",
                            "ko",
                            "de",
                            "es",
                            "ja",
                            "ru",
                            "zh_CN",
                            "zh_TW",
                            "pt_BR",
                            "default"
                        ],
                        "type": "string"
                    },
                    "ModifiedTimestamp": {
                        "description": "The time when the user was modified.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "OrganizationId": {
                        "description": "The ID of the organization.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "RecycleBinFolderId": {
                        "description": "The ID of the recycle bin folder.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "RootFolderId": {
                        "description": "The ID of the root folder.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w+-.@]+",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the user.",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "PENDING"
                        ],
                        "type": "string"
                    },
                    "Storage": {
                        "description": "The storage for the user.",
                        "properties": {
                            "StorageRule": {
                                "description": "The storage for a user.",
                                "properties": {
                                    "StorageAllocatedInBytes": {
                                        "description": "The amount of storage allocated, in bytes.",
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "StorageType": {
                                        "description": "The type of storage.",
                                        "enum": [
                                            "UNLIMITED",
                                            "QUOTA"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "StorageUtilizedInBytes": {
                                "description": "The amount of storage used, in bytes.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "Surname": {
                        "description": "The surname of the user.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TimeZoneId": {
                        "description": "The time zone ID of the user.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of user.",
                        "enum": [
                            "USER",
                            "ADMIN",
                            "POWERUSER",
                            "MINIMALUSER",
                            "WORKSPACESUSER"
                        ],
                        "type": "string"
                    },
                    "Username": {
                        "description": "The login name of the user.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserActivities": {
                "items": {
                    "description": "Describes the activity information.",
                    "properties": {
                        "CommentMetadata": {
                            "description": "Metadata of the commenting activity. This is an optional field and is filled for commenting activities.",
                            "properties": {
                                "CommentId": {
                                    "description": "The ID of the comment.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "CommentStatus": {
                                    "description": "The status of the comment.",
                                    "enum": [
                                        "DRAFT",
                                        "PUBLISHED",
                                        "DELETED"
                                    ],
                                    "type": "string"
                                },
                                "Contributor": {
                                    "description": "The user who made the comment.",
                                    "properties": {
                                        "CreatedTimestamp": {
                                            "description": "The time when the user was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "EmailAddress": {
                                            "description": "The email address of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                            "type": "string"
                                        },
                                        "GivenName": {
                                            "description": "The given name of the user.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The ID of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Locale": {
                                            "description": "The locale of the user.",
                                            "enum": [
                                                "en",
                                                "fr",
                                                "ko",
                                                "de",
                                                "es",
                                                "ja",
                                                "ru",
                                                "zh_CN",
                                                "zh_TW",
                                                "pt_BR",
                                                "default"
                                            ],
                                            "type": "string"
                                        },
                                        "ModifiedTimestamp": {
                                            "description": "The time when the user was modified.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "OrganizationId": {
                                            "description": "The ID of the organization.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "RecycleBinFolderId": {
                                            "description": "The ID of the recycle bin folder.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "[\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "RootFolderId": {
                                            "description": "The ID of the root folder.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "[\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the user.",
                                            "enum": [
                                                "ACTIVE",
                                                "INACTIVE",
                                                "PENDING"
                                            ],
                                            "type": "string"
                                        },
                                        "Storage": {
                                            "description": "The storage for the user.",
                                            "properties": {
                                                "StorageRule": {
                                                    "description": "The storage for a user.",
                                                    "properties": {
                                                        "StorageAllocatedInBytes": {
                                                            "description": "The amount of storage allocated, in bytes.",
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "StorageType": {
                                                            "description": "The type of storage.",
                                                            "enum": [
                                                                "UNLIMITED",
                                                                "QUOTA"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "StorageUtilizedInBytes": {
                                                    "description": "The amount of storage used, in bytes.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Surname": {
                                            "description": "The surname of the user.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "TimeZoneId": {
                                            "description": "The time zone ID of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Type": {
                                            "description": "The type of user.",
                                            "enum": [
                                                "USER",
                                                "ADMIN",
                                                "POWERUSER",
                                                "MINIMALUSER",
                                                "WORKSPACESUSER"
                                            ],
                                            "type": "string"
                                        },
                                        "Username": {
                                            "description": "The login name of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "CreatedTimestamp": {
                                    "description": "The timestamp that the comment was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "RecipientId": {
                                    "description": "The ID of the user being replied to.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Initiator": {
                            "description": "The user who performed the action.",
                            "properties": {
                                "EmailAddress": {
                                    "description": "The email address of the user.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                    "type": "string"
                                },
                                "GivenName": {
                                    "description": "The given name of the user before a rename operation.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The ID of the user.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[&\\w+-.@]+",
                                    "type": "string"
                                },
                                "Surname": {
                                    "description": "The surname of the user.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Username": {
                                    "description": "The name of the user.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "IsIndirectActivity": {
                            "description": "Indicates whether an activity is indirect or direct. An indirect activity results from a direct activity performed on a parent resource. For example, sharing a parent folder (the direct activity) shares all of the subfolders and documents within the parent folder (the indirect activity).",
                            "type": "boolean"
                        },
                        "OrganizationId": {
                            "description": "The ID of the organization.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "OriginalParent": {
                            "description": "The original parent of the resource. This is an optional field and is filled for move activities.",
                            "properties": {
                                "Id": {
                                    "description": "The ID of the resource.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the resource.",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                    "type": "string"
                                },
                                "OriginalName": {
                                    "description": "The original name of the resource before a rename operation.",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                    "type": "string"
                                },
                                "Owner": {
                                    "description": "The owner of the resource.",
                                    "properties": {
                                        "EmailAddress": {
                                            "description": "The email address of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                            "type": "string"
                                        },
                                        "GivenName": {
                                            "description": "The given name of the user before a rename operation.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The ID of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Surname": {
                                            "description": "The surname of the user.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Username": {
                                            "description": "The name of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ParentId": {
                                    "description": "The parent ID of the resource before a rename operation.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of resource.",
                                    "enum": [
                                        "FOLDER",
                                        "DOCUMENT"
                                    ],
                                    "type": "string"
                                },
                                "VersionId": {
                                    "description": "The version ID of the resource. This is an optional field and is filled for action on document version.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Participants": {
                            "description": "The list of users or groups impacted by this action. This is an optional field and is filled for the following sharing activities: DOCUMENT_SHARED, DOCUMENT_SHARED, DOCUMENT_UNSHARED, FOLDER_SHARED, FOLDER_UNSHARED.",
                            "properties": {
                                "Groups": {
                                    "description": "The list of user groups.",
                                    "items": {
                                        "description": "Describes the metadata of a user group.",
                                        "properties": {
                                            "Id": {
                                                "description": "The ID of the user group.",
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "pattern": "[&\\w+-.@]+",
                                                "type": "string"
                                            },
                                            "Name": {
                                                "description": "The name of the group.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "Users": {
                                    "description": "The list of users.",
                                    "items": {
                                        "description": "Describes the metadata of the user.",
                                        "properties": {
                                            "EmailAddress": {
                                                "description": "The email address of the user.",
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                                "type": "string"
                                            },
                                            "GivenName": {
                                                "description": "The given name of the user before a rename operation.",
                                                "maxLength": 64,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "Id": {
                                                "description": "The ID of the user.",
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "pattern": "[&\\w+-.@]+",
                                                "type": "string"
                                            },
                                            "Surname": {
                                                "description": "The surname of the user.",
                                                "maxLength": 64,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "Username": {
                                                "description": "The name of the user.",
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "ResourceMetadata": {
                            "description": "The metadata of the resource involved in the user action.",
                            "properties": {
                                "Id": {
                                    "description": "The ID of the resource.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the resource.",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                    "type": "string"
                                },
                                "OriginalName": {
                                    "description": "The original name of the resource before a rename operation.",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "pattern": "[\\u0020-\\u202D\\u202F-\\uFFFF]+",
                                    "type": "string"
                                },
                                "Owner": {
                                    "description": "The owner of the resource.",
                                    "properties": {
                                        "EmailAddress": {
                                            "description": "The email address of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                                            "type": "string"
                                        },
                                        "GivenName": {
                                            "description": "The given name of the user before a rename operation.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The ID of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[&\\w+-.@]+",
                                            "type": "string"
                                        },
                                        "Surname": {
                                            "description": "The surname of the user.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Username": {
                                            "description": "The name of the user.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ParentId": {
                                    "description": "The parent ID of the resource before a rename operation.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of resource.",
                                    "enum": [
                                        "FOLDER",
                                        "DOCUMENT"
                                    ],
                                    "type": "string"
                                },
                                "VersionId": {
                                    "description": "The version ID of the resource. This is an optional field and is filled for action on document version.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w+-.@]+",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "TimeStamp": {
                            "description": "The timestamp when the action was performed.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Type": {
                            "description": "The activity type.",
                            "enum": [
                                "DOCUMENT_CHECKED_IN",
                                "DOCUMENT_CHECKED_OUT",
                                "DOCUMENT_RENAMED",
                                "DOCUMENT_VERSION_UPLOADED",
                                "DOCUMENT_VERSION_DELETED",
                                "DOCUMENT_VERSION_VIEWED",
                                "DOCUMENT_VERSION_DOWNLOADED",
                                "DOCUMENT_RECYCLED",
                                "DOCUMENT_RESTORED",
                                "DOCUMENT_REVERTED",
                                "DOCUMENT_SHARED",
                                "DOCUMENT_UNSHARED",
                                "DOCUMENT_SHARE_PERMISSION_CHANGED",
                                "DOCUMENT_SHAREABLE_LINK_CREATED",
                                "DOCUMENT_SHAREABLE_LINK_REMOVED",
                                "DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED",
                                "DOCUMENT_MOVED",
                                "DOCUMENT_COMMENT_ADDED",
                                "DOCUMENT_COMMENT_DELETED",
                                "DOCUMENT_ANNOTATION_ADDED",
                                "DOCUMENT_ANNOTATION_DELETED",
                                "FOLDER_CREATED",
                                "FOLDER_DELETED",
                                "FOLDER_RENAMED",
                                "FOLDER_RECYCLED",
                                "FOLDER_RESTORED",
                                "FOLDER_SHARED",
                                "FOLDER_UNSHARED",
                                "FOLDER_SHARE_PERMISSION_CHANGED",
                                "FOLDER_SHAREABLE_LINK_CREATED",
                                "FOLDER_SHAREABLE_LINK_REMOVED",
                                "FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED",
                                "FOLDER_MOVED"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "UserAttributeValueType": {
                "maxLength": 64,
                "minLength": 1,
                "type": "string"
            },
            "UserFilterType": {
                "enum": [
                    "ALL",
                    "ACTIVE_PENDING"
                ],
                "type": "string"
            },
            "UserIdsType": {
                "maxLength": 2000,
                "minLength": 1,
                "pattern": "[&\\w+-.@, ]+",
                "type": "string"
            },
            "UserMetadata": {
                "description": "Describes the metadata of the user.",
                "properties": {
                    "EmailAddress": {
                        "description": "The email address of the user.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                        "type": "string"
                    },
                    "GivenName": {
                        "description": "The given name of the user before a rename operation.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Id": {
                        "description": "The ID of the user.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[&\\w+-.@]+",
                        "type": "string"
                    },
                    "Surname": {
                        "description": "The surname of the user.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Username": {
                        "description": "The name of the user.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserMetadataList": {
                "items": {
                    "description": "Describes the metadata of the user.",
                    "properties": {
                        "EmailAddress": {
                            "description": "The email address of the user.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",
                            "type": "string"
                        },
                        "GivenName": {
                            "description": "The given name of the user before a rename operation.",
                            "maxLength": 64,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Id": {
                            "description": "The ID of the user.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[&\\w+-.@]+",
                            "type": "string"
                        },
                        "Surname": {
                            "description": "The surname of the user.",
                            "maxLength": 64,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Username": {
                            "description": "The name of the user.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "UserSortType": {
                "enum": [
                    "USER_NAME",
                    "FULL_NAME",
                    "STORAGE_LIMIT",
                    "USER_STATUS",
                    "STORAGE_USED"
                ],
                "type": "string"
            },
            "UserStatusType": {
                "enum": [
                    "ACTIVE",
                    "INACTIVE",
                    "PENDING"
                ],
                "type": "string"
            },
            "UserStorageMetadata": {
                "description": "Describes the storage for a user.",
                "properties": {
                    "StorageRule": {
                        "description": "The storage for a user.",
                        "properties": {
                            "StorageAllocatedInBytes": {
                                "description": "The amount of storage allocated, in bytes.",
                                "minimum": 0,
                                "type": "integer"
                            },
                            "StorageType": {
                                "description": "The type of storage.",
                                "enum": [
                                    "UNLIMITED",
                                    "QUOTA"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "StorageUtilizedInBytes": {
                        "description": "The amount of storage used, in bytes.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserType": {
                "enum": [
                    "USER",
                    "ADMIN",
                    "POWERUSER",
                    "MINIMALUSER",
                    "WORKSPACESUSER"
                ],
                "type": "string"
            },
            "UsernameType": {
                "maxLength": 256,
                "minLength": 1,
                "pattern": "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?",
                "type": "string"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "DescribeActivitiesBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {},
                            "type": "object"
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}